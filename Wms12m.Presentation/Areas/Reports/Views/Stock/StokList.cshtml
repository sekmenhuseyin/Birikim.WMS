@model List<RaporStokKodCase>
@{
    System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
}
<div class="col-md-12" style="width:100%;">
    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-gift"></i>Cari Ekstre
            </div>
            <div class="col-md-1 pull-right m-t-5 p-0" id="buttons"></div>

        </div>
        <div class="portlet-body">
            <div class="row" style="margin-bottom:5px;margin-left:5px;">
                <div class="col-md-6">
                    <div id="buttons"></div>
                </div>
            </div>
            <table class="table table-striped table-bordered table-condensed" id="sample_1">
                <thead>
                    <tr>
                        <th>Mal Kodu</th>
                        <th>Mal Adı</th>
                        <th>Birim1</th>
                        <th>Grup Kodu</th>
                        <th>Tip Kodu</th>
                        <th>Özel Kodu</th>
                        <th>Kod - 1</th>
                        <th>Kod - 2</th>
                        <th>Kod - 3</th>
                        <th>Giriş Miktarı</th>
                        <th>Çıkış Miktarı</th>
                        <th>Stok Miktar</th>
                        <th>Stok Miktar Birim</th>
                        <th>Birim 2</th>
                        <th>Stok Birim Miktar 3</th>
                        <th>Birim 3</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th colspan="9"></th>
                        <th class="text-right"></th>
                        <th class="text-right"></th>
                        <th class="text-right"></th>
                        <th colspan="4"></th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            
                            <td nowrap>@item.MalKodu</td>
                            <td nowrap>@item.MalAdi</td>
                            <td nowrap>@item.Birim1</td>
                            <td nowrap>@item.GrupKod</td>
                            <td nowrap>@item.TipKod</td>
                            <td nowrap>@item.OzelKod</td>
                            <td nowrap>@item.Kod1</td>
                            <td nowrap>@item.Kod2</td>
                            <td nowrap>@item.Kod3</td>
                            <td nowrap align="right">@item.GirMiktar.ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@item.CikMiktar.ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@item.StokMiktar.ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@item.StokMiktarBirim2.ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@item.Birim2</td>
                            <td nowrap align="right">@item.StokMiktarBirim3.ToDecimal().ToOnFormat()</td>
                            <td nowrap>@item.Birim3</td>

                        </tr>
                    }
                </tbody>
            </table>

        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var model =  @Html.Raw(serializer.Serialize(Model));
        var GirMiktar = 0, CikMiktar = 0, StokMiktar = 0;
        jQuery.each(model, function (i, val) {
            GirMiktar += val.GirMiktar;
            CikMiktar += val.CikMiktar;
            StokMiktar += val.StokMiktar;

        });
      var table123=  $('#sample_1').DataTable({
            "language": { "url": "http://cdn.datatables.net/plug-ins/1.10.13/i18n/Turkish.json" },
            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
         
                // Update footer
                $(api.column(9).footer()).html(
                    ondalikBinlik(Math.round(GirMiktar * 100) / 100, 2)
                );
                $(api.column(10).footer()).html(
                    ondalikBinlik(Math.round(CikMiktar * 100) / 100, 2)
                );
                $(api.column(11).footer()).html(
                    ondalikBinlik(Math.round(StokMiktar * 100) / 100, 2)
                );

            }
        });
      $(document).ready(function () {
          $('.buttons-pdf').removeClass('btn btn-default');
          $('.buttons-excel').removeClass('btn btn-default');
      });
        var buttons = new $.fn.dataTable.Buttons(table123, {
            buttons: [
                { "extend": 'pdf', "text": '<span class="fa fa-file-pdf-o f-s-15 red"></span>', "className": 'btn btn-default btn-xs;' },
                { "extend": 'excel', "text": '<span class="fa fa-file-excel-o f-s-15 green"></span>', "className": 'btn btn-default btn-xs;' }
            ]
        }).container().appendTo($('#buttons'));
    });
</script>