@model List<RaporCariEkstre>
@{
    System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
}
<div class="col-md-12" style="width:100%;">
    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-gift"></i>Cari Ekstre
            </div>
            <div class="col-md-1 pull-right m-t-5 p-0" id="buttons"></div>
        </div>
        <div class="portlet-body">
            <div class="row" style="margin-bottom:5px;margin-left:5px;">
                <div class="col-md-6">
                    <div id="buttons"></div>
                </div>
            </div>

            <table class="table table-striped table-bordered table-condensed" id="sample_1">
                <thead>
                    <tr>
                        <th nowrap style="width:20px;"></th>
                        <th nowrap>Tarih</th>
                        <th nowrap>Evrak No</th>
                        <th nowrap>İşlem Tipi</th>
                        <th nowrap>Vade Tarihi</th>
                        <th nowrap>Borç</th>
                        <th nowrap>Alacak</th>
                        <th nowrap>Borç Bakiye</th>
                        <th nowrap>Alacak Bakiye</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th nowrap colspan="5"></th>
                        <th nowrap style="text-align:right;"></th>
                        <th nowrap style="text-align:right;"></th>
                        <th nowrap style="text-align:right;"></th>
                        <th nowrap style="text-align:right;"></th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td nowrap class='details-control' style="width:20px;"> </td>
                            <td nowrap>@item.Tarih.Value.ToString("dd/MM/yyyy")</td>
                            <td nowrap>@item.EvrakNo</td>
                            <td nowrap>@item.IslemTip</td>
                            <td nowrap>@item.VadeTarih.Value.ToString("dd/MM/yyyy")</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.Borc).ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.Alacak).ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.BorcBakiye).ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.AlacakBakiye).ToDecimal().ToOnFormat()</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $.extend(jQuery.fn.dataTableExt.oSort, {
            "date-uk-pre": function (a) {
                return parseInt(moment(a, "DD/MM/YYYY").format("X"), 10);
            },
            "date-uk-asc": function (a, b) {
                return a - b;
            },
            "date-uk-desc": function (a, b) {
                return b - a;
            }
        });
        var edit_date_col_num = $('th:contains("Tarih")').index();
        var model =  @Html.Raw(serializer.Serialize(Model));
        var Borc = 0, Alacak = 0, BorcBakiye = 0, AlacakBakiye = 0;
        jQuery.each(model, function (i, val) {
            Borc += val.Borc;
            Alacak += val.Alacak;
            BorcBakiye = val.BorcBakiye;
            AlacakBakiye = val.AlacakBakiye;
        });
        table = $('#sample_1').DataTable({
            //"order": [[0, "asc"]],
            "scrollY": 400,
            "ordering": false,
            "language": { "url": "http://cdn.datatables.net/plug-ins/1.10.13/i18n/Turkish.json" },
            "columnDefs": [
                { "type": "date-uk", targets: [edit_date_col_num] }
            ],
            "footerCallback": function (row, data, start, end, display) {

                var api = this.api(), data;


                // Update footer
                $(api.column(5).footer()).html(
                    ondalikBinlik(Math.round(Borc * 100) / 100, 2)
                );
                $(api.column(6).footer()).html(
                    ondalikBinlik(Math.round(Alacak * 100) / 100, 2)
                );
                $(api.column(7).footer()).html(
                    ondalikBinlik(Math.round(BorcBakiye * 100) / 100, 2)
                );
                $(api.column(8).footer()).html(
                    ondalikBinlik(Math.round(AlacakBakiye * 100) / 100, 2)
                );
            }

        });
        $('#sample_1 tbody').on('click', '.details-control', function () {
            var tr = $(this).closest('tr');
            var hesKod = "";
            table
                .rows('.aa')
                .nodes()
                .to$()      // Convert to a jQuery object
                .removeClass('aa');
            tr.addClass("aa");
            var x = table.rows('.aa').data();
            jQuery.each(model, function (i, val) {
                if (model[i]["EvrakNo"].toString().trim() == x[0][2]) {
                    hesKod = model[i]["EvrakNo"];
                }
            });
            if (x[0][3] == "Cek" || x[0][3] == "Çek") {
                $.ajax({
                    type: 'POST',
                    url: '/Reports/Financial/CariDetayCek',
                    data: { "CHK": chk, "EvrakNo": hesKod },
                    dataType: "html",
                    success: function (data) {
                        $('#x-modal-cari-detay-cek').modal("show");
                        var result = JSON.parse(data);
                        var columns = [
                            {
                                caption: 'Borçlu Ünvan', dataField: 'BorcluUnvan',
                            },
                            { caption: 'Tutar', dataField: 'Tutar', format: 'fixedPoint', precision: 2  },
                            {
                                caption: 'Vade Tarihi', dataField: 'VadeTarihi',
                                customizeText: function (cellInfo) {
                                    if (cellInfo.value != null) return formatDateFromJson(cellInfo.value); else return "";
                                }
                            },
                            { caption: 'Şehir', dataField: 'Sehir' },
                            { caption: 'Banka', dataField: 'Banka'},
                            { caption: 'Şube', dataField: 'Sube'},
                            { caption: 'Çek No', dataField: 'CekNo' },
                        ];
                        _grid_quotations_detail = $('.grid_cari-detay-cek').dxDataGrid({
                            dataSource: result,
                            height: 400,
                            paging: { pageSize: 5000 },
                            columns: columns,
                            headerFilter: {
                                visible: true
                            },
                            popupDetailedWindow: true,
                            columnAutoWidth: true,
                            pagingCounter: true,
                            filterRow: {
                                visible: true,
                                applyFilter: 'auto',
                                applyFilterText: 'Apply filter',
                                resetOperationText: 'Reset'
                            },
                            scrolling: {
                                scrollByContent: true,
                                scrollByThumb: true
                            },
                            allowColumnReordering: true,
                            allowColumnResizing: true,
                            remoteOperations: true,
                            showRowLines: true,
                            hoverStateEnabled: true,
                            rowAlternationEnabled: false,
                            sorting: {
                                mode: "multiple",
                            },
                            //summary: {
                            //    totalItems: [{
                            //        column: "Tutar",
                            //        summaryType: "count"
                            //    }]
                            //},
                            onRowClick: function (opt) {
                                if (opt.rowType == "data") {
                                    var component = opt.component;
                                    var prevClickTime = component.lastClickTime;//take last clicked time
                                    component.lastClickTime = new Date();
                                    if (prevClickTime && (component.lastClickTime - prevClickTime < 300)) {//check their difference, if less than 300  it is a double click
                                        //PartialView("/Approval/PartialTeminatTanim", 'teminat_tanim_data', JSON.stringify({ chk: opt.data.HesapKodu }));
                                    }
                                }
                            },
                            onCellPrepared: function (info) {
                                if (info.rowType == "data") {
                                    if (info.column.dataField == "Tarih" && info.value == "VadeTarih") {
                                        info.cellElement.css({ "background-color": "#ea3d75", "color": "white" });
                                    }
                                }
                            }
                        }).dxDataGrid("instance");
                    }
                });
            }
            else if (x[0][3] == "Fatura") {
                $.ajax({
                    type: 'POST',
                    url: '/Reports/Financial/CariDetayFatura',
                    data: { "CHK": chk, "EvrakNo": hesKod },
                    dataType: "html",
                    success: function (data) {
                        $('#x-modal-cari-detay-fatura').modal("show");
                        var result = JSON.parse(data);
                        var columns = [
                            { caption: 'Evrak No', dataField: 'EvrakNo', },
                            { caption: 'Mal Kodu', dataField: 'MalKodu' },
                            { caption: 'Mal Adı', dataField: 'MalAdi' },
                            { caption: 'Miktar', dataField: 'Miktar', format: 'fixedPoint', precision: 4},
                            { caption: 'Birim', dataField: 'Birim'},
                            { caption: 'Birim Fiyat', dataField: 'BirimFiyat', format: 'fixedPoint', precision: 2 },
                            { caption: 'Tutar', dataField: 'Tutar', format: 'fixedPoint', precision: 2 },
                            { caption: 'İskonto 1', dataField: 'IskontoOran1', format: 'fixedPoint', precision: 2 },
                            { caption: 'İskonto 2', dataField: 'IskontoOran2', format: 'fixedPoint', precision: 2 },
                            { caption: 'İskonto 3', dataField: 'IskontoOran3', format: 'fixedPoint', precision: 2 },
                            { caption: 'İskonto 4', dataField: 'IskontoOran4', format: 'fixedPoint', precision: 2 },
                            { caption: 'İskonto 5', dataField: 'IskontoOran5', format: 'fixedPoint', precision: 2 },
                            { caption: 'Toplam İskonto', dataField: 'ToplamIskonto', format: 'fixedPoint', precision: 2 },
                            { caption: 'Net Tutar', dataField: 'NetTutar', format: 'fixedPoint', precision: 2 },
                        ];
                        _grid_quotations_detail = $('.grid_cari-detay-fatura').dxDataGrid({
                            dataSource: result,
                            height: 400,
                            paging: { pageSize: 5000 },
                            columns: columns,
                            headerFilter: {
                                visible: true
                            },
                            popupDetailedWindow: true,
                            columnAutoWidth: true,
                            pagingCounter: true,
                            filterRow: {
                                visible: true,
                                applyFilter: 'auto',
                                applyFilterText: 'Apply filter',
                                resetOperationText: 'Reset'
                            },
                            scrolling: {
                                scrollByContent: true,
                                scrollByThumb: true
                            },
                            allowColumnReordering: true,
                            allowColumnResizing: true,
                            remoteOperations: true,
                            showRowLines: true,
                            hoverStateEnabled: true,
                            rowAlternationEnabled: false,
                            //summary: {
                            //    totalItems: [{
                            //        column: "Tutar",
                            //        summaryType: "count"
                            //    }]
                            //},
                            sorting: {
                                mode: "multiple",
                            },
                            onRowClick: function (opt) {
                                if (opt.rowType == "data") {
                                    var component = opt.component;
                                    var prevClickTime = component.lastClickTime;//take last clicked time
                                    component.lastClickTime = new Date();
                                    if (prevClickTime && (component.lastClickTime - prevClickTime < 300)) {//check their difference, if less than 300  it is a double click
                                        //PartialView("/Approval/PartialTeminatTanim", 'teminat_tanim_data', JSON.stringify({ chk: opt.data.HesapKodu }));
                                    }
                                }
                            },
                            onCellPrepared: function (info) {
                                if (info.rowType == "data") {
                                    if (info.column.dataField == "Tarih" && info.value == "VadeTarih") {
                                        info.cellElement.css({ "background-color": "#ea3d75", "color": "white" });
                                    }
                                }
                            }
                        }).dxDataGrid("instance");
                    }
                });
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/Reports/Financial/CariDetayDiger',
                    data: { "CHK": chk, "EvrakNo": hesKod},
                    dataType: "html",
                    success: function (data) {
                        $('#x-modal-cari-detay-diger').modal("show");
                        var result = JSON.parse(data);
                        var columns = [
                            { caption: 'Hesap Kodu', dataField: 'HesapKodu', },
                            { caption: 'Ünvan', dataField: 'Unvan' },
                            { caption: 'Evrak No', dataField: 'EvrakNo' },
                            { caption: 'Karşı Hesap kodu', dataField: 'KarsiHesapKodu' },
                            { caption: 'Karşı Evrak No', dataField: 'KarsiEvrakNo' },
                            { caption: 'Acıklama', dataField: 'Aciklama' },
                            { caption: 'Tutar', dataField: 'Tutar', alignment: 'right', format: 'fixedPoint', precision: 2 },
                            { caption: 'Vade Tarihi', dataField: 'VadeTarihi' },
                         
                        ];
                        _grid_quotations_detail = $('.grid_cari-detay-diger').dxDataGrid({
                            dataSource: result,
                            height: 400,
                            paging: { pageSize: 5000 },
                            columns: columns,
                            headerFilter: {
                                visible: true
                            },
                            //summary: {
                            //    totalItems: [{
                            //        column: "Tutar",
                            //        summaryType: "sum",
                            //        valueFormat: "currency"
                            //    }]
                            //},
                            popupDetailedWindow: true,
                            columnAutoWidth: true,
                            pagingCounter: true,
                            filterRow: {
                                visible: true,
                                applyFilter: 'auto',
                                applyFilterText: 'Apply filter',
                                resetOperationText: 'Reset'
                            },
                            scrolling: {
                                scrollByContent: true,
                                scrollByThumb: true
                            },
                            allowColumnReordering: true,
                            allowColumnResizing: true,
                            remoteOperations: true,
                            showRowLines: true,
                            hoverStateEnabled: true,
                            rowAlternationEnabled: false,
                            sorting: {
                                mode: "multiple",
                            },
                            onRowClick: function (opt) {
                                if (opt.rowType == "data") {
                                    var component = opt.component;
                                    var prevClickTime = component.lastClickTime;//take last clicked time
                                    component.lastClickTime = new Date();
                                    if (prevClickTime && (component.lastClickTime - prevClickTime < 300)) {//check their difference, if less than 300  it is a double click
                                        //PartialView("/Approval/PartialTeminatTanim", 'teminat_tanim_data', JSON.stringify({ chk: opt.data.HesapKodu }));
                                    }
                                }
                            },
                            onCellPrepared: function (info) {
                                if (info.rowType == "data") {
                                    if (info.column.dataField == "Tarih" && info.value == "VadeTarih") {
                                        info.cellElement.css({ "background-color": "#ea3d75", "color": "white" });
                                    }
                                }
                            }
                        }).dxDataGrid("instance");
                    }
                });
            }
          
        });

        var buttons = new $.fn.dataTable.Buttons(table, {
            buttons: [
                { "extend": 'pdf', "text": '<span class="fa fa-file-pdf-o" style="font-size:15px;color:red;"></span>', "className": 'btn btn-default btn-xs;' },
                { "extend": 'excel', "text": '<span class="fa fa-file-excel-o" style="font-size:15px;color:green"></span>', "className": 'btn btn-default btn-xs;' }
            ]
        }).container().appendTo($('#buttons'));
        $('.buttons-pdf').removeClass('btn btn-default');
        $('.buttons-excel').removeClass('btn btn-default');
        
    });
    $('#sample_1').on('draw.dt', function () {
        setTimeout(function () { $("td").removeClass('sorting_1'); }, 0);
    });
</script>