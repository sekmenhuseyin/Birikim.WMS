@model HDF
    @{ 
        string temp = Convert.ToString(ViewBag.Temp);
    }
<div class="col-md-12">
    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-gift"></i>@(Model.ID == 0 ? "Proje Ekle" : "Proje Düzenle")
            </div>
        </div>
        <div class="portlet-body form">
            @using (Ajax.BeginForm("TargetSave", "Financial", new { area = "Reports" }, new AjaxOptions { OnSuccess = "getResult", HttpMethod = "post", OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');" }, new { @class = "form-horizontal" }))
            {
                @Html.HiddenFor(model => model.ID, new { @class = "ID" })
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="form-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BOLGE, "Bölge", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.DropDownList("BOLGE", null, htmlAttributes: new { @onchange = "TemsilciGetir(this.value);", @class = "form-control input-circle satirekle", required = "required" })
                            @Html.ValidationMessageFor(model => model.BOLGE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.TEMSILCI, "Temsilci", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @*@Html.DropDownList("TEMSILCI", null, htmlAttributes: new { @class = "form-control input-circle", required = "required" })*@
                            <select id="TEMSILCI" class="form-control input-circle"  required="required" name="TEMSILCI"></select>
                            @Html.ValidationMessageFor(model => model.TEMSILCI, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.URUNGRUP, "Ürün Grup", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.DropDownList("URUNGRUP", null, htmlAttributes: new { @class = "form-control input-circle satirekle", required = "required" })
                            @Html.ValidationMessageFor(model => model.URUNGRUP, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.HEDEF, "Hedef", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.HEDEF, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                            @Html.ValidationMessageFor(model => model.HEDEF, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-9">
                            <button type="submit" class="btn btn-circle green" onchange="Duzenle()">Düzenle</button>
                            <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="TmzGunc('0')">Temizle</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var grupKoddrd = document.getElementById("BOLGE");
        var grupKod = grupKoddrd.options[grupKoddrd.selectedIndex].text;
        var temsi = document.getElementById("TEMSILCI");
        var temsilci = temsi.options[temsi.selectedIndex].text;
        var urungru = document.getElementById("URUNGRUP");
        var urunGrup = urungru.options[urungru.selectedIndex].text;
        var hedef = document.getElementById("HEDEF").value;
        TemsilciGetir(grupKod);
    });
    function TemsilciGetir(GrupKod) {
        if (GrupKod != "") {
            $("#TEMSILCI option").remove();
            $.ajax({
                url: window.location.origin + "/Reports/Financial/TargetTemsilciList/?GrupKod=" + GrupKod,
                type: 'POST',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data != "") {
                        $.each(data, function (i, item) {
                            $('#TEMSILCI').append($('<option>', { value: item.Value, text: item.Text }));
                        });
                        //$("#TEMSILCI").prepend("<option value=''>Seçiniz !!!</option>");
                        $("#TEMSILCI")[0].selectedIndex = 0;
                    }
                }
            });
        }
    }
    function Duzenle() {
        $.ajax({
            url: window.location.origin + "/Reports/Financial/TargetDelete/?GrupKod=" + GrupKod,
            data: []
           
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
        });
    }

</script>