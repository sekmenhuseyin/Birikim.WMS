@model List<RaporBakiye>
@{
    System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
}<div class="portlet box green">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-gift"></i>Bakiye
        </div>
        <div class="col-md-1 pull-right m-t-5 p-0" id="buttons"></div>
    </div>
    <div class="portlet-body">
        <div class="row p-10">
            <table class="table table-striped table-bordered table-condensed" id="sample_1">
                <thead><tr><th style="width:20px;"></th><th>Hesap Kodu</th><th>Ünvan</th><th>Borç</th><th>Alacak</th><th>Bakiye</th></tr></thead>
                <tfoot><tr><th colspan="3"></th><th class="text-right"></th><th class="text-right"></th><th class="text-right"></th></tr></tfoot>
                <tfoot class="tf-search"><tr><th style="width:20px;"></th><th></th><th></th><th></th><th></th><th></th></tr></tfoot>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td nowrap class='details-control' style="width:20px;"> </td>
                            <td nowrap>@item.HesapKodu</td>
                            <td nowrap>@item.Unvan</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.Borc).ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.Alacak).ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.Bakiye).ToDecimal().ToOnFormat()</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        DevExpress.ui.dxOverlay.baseZIndex(20000);
        var model =  @Html.Raw(serializer.Serialize(Model));
        table =$('#sample_1').DataTable({
            "language": { "url": "http://cdn.datatables.net/plug-ins/1.10.13/i18n/Turkish.json" },
            "pagingType": "full_numbers",
            "ordering": false,
            "footerCallback": function (row, data, start, end, display) {
                var Borc = 0, Alacak = 0, Bakiye = 0;
                table.rows({ search: 'applied' }).data().each(function (val, index) {
                    Borc += jDecimal(val[3]);
                    Alacak += jDecimal(val[4]);
                    Bakiye += jDecimal(val[5]);
                });
                var api = this.api(), data;
                // Update footer
                $(api.column(3).footer()).html(numeral(Borc).format());
                $(api.column(4).footer()).html(numeral(Alacak).format());
                $(api.column(5).footer()).html(numeral(Bakiye).format());
            }
        });
        $('#sample_1 tbody').on('click', '.details-control', function () {
            var tr = $(this).closest('tr');
            table
                .rows('.aa')
                .nodes()
                .to$()      // Convert to a jQuery object
                .removeClass('aa');
            tr.addClass("aa");
            var x = table.rows('.aa').data();
            $(".unvan-text").text(x[0][2] + "   Hesap Extresi");
            $.ajax({
                type: 'POST',
                url: '/Reports/Financial/BakiyeDetay',
                data: { "CHK": x[0][1] },
                dataType: "html",
                success: function (data) {
                    $('#x-modal-bakiye-detay').modal("show");
                    var result = JSON.parse(data);
                    var columns = [
                        {
                            caption: 'Tarih', dataField: 'Tarih',
                            customizeText: function (cellInfo) {
                                if (cellInfo.value != null) return formatDateFromJson(cellInfo.value); else return "";
                            }
                        },
                        { caption: 'EvrakNo', dataField: 'EvrakNo' },
                        { caption: 'İşlem Tipi', dataField: 'IslemTip' },
                        {
                            caption: 'Vade Tarihi', dataField: 'VadeTarih',
                             customizeText: function (cellInfo) {
                                if (cellInfo.value != null) return formatDateFromJson(cellInfo.value); else return "";
                            }
                        },
                        { caption: 'Borç', dataField: 'Borc', format: 'fixedPoint',precision: 2 },
                        { caption: 'Alacak', dataField: 'Alacak', format: 'fixedPoint', precision: 2  },
                        { caption: 'Borç Bakiye', dataField: 'BorcBakiye', format: 'fixedPoint', precision: 2  },
                        { caption: 'Alacak Bakiye', dataField: 'AlacakBakiye', format: 'fixedPoint', precision: 2  }
                    ];
                    _grid_quotations_detail = $('.grid_bakiye-detay').dxDataGrid({
                        dataSource: result,
                        height: 400,
                        paging: { pageSize: 5000 },
                        columns: columns,
                        headerFilter: {
                            visible: true
                        },
                        popupDetailedWindow: true,
                        columnAutoWidth: true,
                        pagingCounter: true,
                        filterRow: {
                            visible: true,
                            applyFilter: 'auto',
                            applyFilterText: 'Apply filter',
                            resetOperationText: 'Reset'
                        },
                        scrolling: {
                            scrollByContent: true,
                            scrollByThumb: true
                        },
                        allowColumnReordering: true,
                        allowColumnResizing: true,
                        remoteOperations: true,
                        showRowLines: true,
                        hoverStateEnabled: true,
                        rowAlternationEnabled: false,
                        sorting: {
                            mode: "multiple",
                        },
                        onCellPrepared: function (info) {
                            if (info.rowType == "data") {
                                if (info.column.dataField == "Tarih" && info.value == "VadeTarih") {
                                    info.cellElement.css({ "background-color": "#ea3d75", "color": "white" });
                                }
                            }
                        }
                    }).dxDataGrid("instance");
                }
            });
        });
        $('#sample_1 .tf-search th').each(function ()
        {
            var title = $('#sample_1 thead th').eq($(this).index()).text();
            if (title != "" && title.indexOf("Tarih") !== -1)
                $(this).html('<input class="form-control input-circle tarih" type="text" placeholder="Ara" />');
            else if (title != "" && title != "Detay" && title != "Hareket")
                $(this).html('<input class="form-control input-circle" type="text" placeholder="Ara" />');
        });
        $("#sample_1 tfoot input").on('keyup change', function () { table.column($(this).parent().index() + ':visible').search(this.value).draw(); });
        //tarih
        $.datepicker.setDefaults($.datepicker.regional["tr"]);
        $(".tarih").datepicker();
        $("#buttons").html("");
        var buttons = new $.fn.dataTable.Buttons(table, {
            buttons: [
                { "extend": 'pdf', "text": '<span class="fa fa-file-pdf-o f-s-15 red"></span>', "className": 'btn-xs;' },
                { "extend": 'excel', "text": '<span class="fa fa-file-excel-o f-s-15 green"></span>', "className": 'btn-xs;' }
            ]
        }).container().appendTo($('#buttons'));
        $('#sample_1 .tf-search tr').insertAfter($('#sample_1 thead tr'))
    });
</script>