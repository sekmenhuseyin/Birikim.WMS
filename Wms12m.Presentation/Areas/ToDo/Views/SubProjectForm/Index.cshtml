@model ProjeForm
@{
    ViewBag.Title = "Form işlemleri";
    Layout = "~/Views/Shared/_Layout.cshtml";

}@section Styles{<link href="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/datatables/dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.css" rel="stylesheet" type="text/css" />
<style>
    .control-label {
        text-align: right;
        color: black;
    }
</style>
}<div class="page-bar"><ul class="page-breadcrumb"><li><a href="/">Anasayfa</a><i class="fa fa-circle"></i></li><li><span>Form İşlemleri</span></li></ul></div>
<h1 class="page-title">Form İşlemleri</h1>
<div class="row">
    <div class="col-md-12">
        <div class="row" id="CreateEdit">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>Form Ekle

                        </div>
                    </div>
                    <div class="portlet-body form">
                        @using (Ajax.BeginForm("Save", "ProjectForm", new { area = "ToDo" }, new AjaxOptions { InsertionMode = InsertionMode.Replace, OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEdit('0');" }, new { @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(model => model.ID)
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-body">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.PID, "PID", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("PID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MusteriID, "MusteriID", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("MusteriID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.MusteriID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Proje, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Proje, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Proje, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Form, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Form, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Form, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-3 col-md-9">
                                        <input type="submit" value="Ekle" class="btn btn-circle green" />
                                        <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>

                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div id="liste"></div>
    </div>
</div>
@section Scripts{
<script src="~/Content/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/dataTables.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/scripts/datatable.js" type="text/javascript"></script>
<script type="text/javascript">
    $("#MesaiKontrol").bootstrapSwitch();
    $(document).ready(function () {
        $('#MesaiKontrol').on('switchChange.bootstrapSwitch', function (e, data) {
            var state = $(this).bootstrapSwitch('state');//returns true or false

            if (state) {
                $('#MesaiKota').prop("readonly", false)
            }
            else {
                $('#MesaiKota').prop("readonly", true)
            }
        });
    });
    var DeleteFunctionUrl = '/ToDo/SubProjectForm/Delete';
    PartialView("/ToDo/SubProjectForm/List", 'liste');
    function CreateEdit(Id) {
        if (Id == 0) {
            $("#ID").val("0");
            $("#Proje").val("");
            $("#Sorumlu").val("");
            $("#KarsiForumlu").val("");
            $("#Aciklama").val("");
            $("#MesaiKota").val("");
            PartialView("/ToDo/SubProjectForm/List", 'liste');
        }
        else
        { PartialView("/ToDo/SubProjectForm/Edit", 'CreateEdit', JSON.stringify({ Id: Id })); }

    }
    </script>
}
