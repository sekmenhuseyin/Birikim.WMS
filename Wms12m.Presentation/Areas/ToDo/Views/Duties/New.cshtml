@model Gorevler
<div class="modal-content">
    <div class="close-modal" data-dismiss="modal"><div class="lr"><div class="rl"></div></div></div>
    <div class="container">
        <div class="row" id="CreateEditAlt">
            <div class="col-lg-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>Görev Ekle
                        </div>
                    </div>
                    <div class="portlet-body form">
                        @using (Ajax.BeginForm("Save", "Duties", new { area = "ToDo" }, new AjaxOptions { InsertionMode = InsertionMode.Replace, OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEdit('0');" }, new { @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(model => model.ID)
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ID)

                                @*<div class="form-group row" style="display:none">
                                        @Html.LabelFor(model => model.ProjeFormID, "ProjeFormID", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-4">
                                            @Html.DropDownList("ProjeFormID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                            @Html.ValidationMessageFor(model => model.ProjeFormID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Firma</label>
                                    <div class="col-md-10">
                                        @Html.DropDownList("MusteriID", null, string.Empty, htmlAttributes: new { @class = "form-control input-circle MusteriID", @onchange = "getProje(this.value,'ProjeList', 'FormList');", required = "required" })
                                        <span class="field-validation-valid" data-valmsg-for="MusteriID" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-1  control-label">Proje</div>
                                    <div class="col-sm-10">
                                        <select id="ProjeList" class="form-control input-circle ProjeID" onchange="getForm(this.value, 'FormList');" required></select>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-1  control-label">Form</div>
                                    <div class="col-sm-10">
                                        <select name="ProjeFormID" id="FormList" class="form-control input-circle FormID" required></select>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Sorumlu, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("Sorumlu", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.Sorumlu, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Sorumlu2, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("Sorumlu2", null, string.Empty, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.Sorumlu2, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Sorumlu3, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("Sorumlu3", null, string.Empty, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.Sorumlu3, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.KaliteKontrol, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("KaliteKontrol", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.KaliteKontrol, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Gorev, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Gorev, new { htmlAttributes = new { @class = "form-control input-circle" }, required = "required" })
                                        @Html.ValidationMessageFor(model => model.Gorev, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Aciklama, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.Aciklama, 10, 55, new { htmlAttributes = new { @class = "form-control form-rounded" }, required = "required" })
                                        @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row todo-content">
                                    <div class="control-label col-md-1"><span class="work-index">1</span><span>-</span></div>
                                    <div class="col-md-10">
                                        <div class="txt-aciklama work-1"></div>
                                    </div>
                                    <div class="insert-work-icon col-md-1">
                                        <i class="fa fa-minus-circle delete-icn" onclick="DeleteElement(this)" style="display:none;"></i>
                                        <i class="fa fa-plus-circle last-work" onclick="NewElement()" style="margin-left:5px;"></i>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.OncelikID, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("OncelikID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.OncelikID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.DurumID, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("DurumID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.DurumID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.GorevTipiID, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("GorevTipiID", null, string.Empty, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.GorevTipiID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.DepartmanID, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("DepartmanID", null, string.Empty, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.DepartmanID, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group row">
                                    @Html.LabelFor(model => model.TahminiBitis, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TahminiBitis, new { htmlAttributes = new { @class = "form-control input-circle date-picker" } })
                                        @Html.ValidationMessageFor(model => model.TahminiBitis, "", new { @class = "text-danger" })
                                    </div>
                                </div>




                                <div class="form-group" style="display: none;">
                                    @Html.LabelFor(model => model.Kaydeden, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Kaydeden, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Kaydeden, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" style="display: none;">
                                    @Html.LabelFor(model => model.KayitTarih, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.KayitTarih, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.KayitTarih, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-5 col-md-7">
                                            <input type="submit" value="Ekle" class="btn btn-circle green" />
                                            <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    sayac = 1;
    $(".work-1").dxTextBox();
    $(".work-1").dxTextBox("instance").option("name", "work");
    $(document).ready(function () {
        $('.date-picker').datepicker();
        $("#KaliteKontrol").selectFirst();
    });


    function NewElement() {
        var index = ++sayac;
        $(".last-work").removeClass("fa fa-plus-circle");
        $(".insert-work-icon i").removeClass("last-work");
        $(".delete-icn").css("display", "initial");
        var newElement = $("<div>").addClass("form-group row todo-content");
        newElement.append("<div class='control-label col-md-1'><span class='work-index'>" + index + "</span > <span>-</span></div><div class='col-md-10'><div class='txt-aciklama work-" + index + "'></div></div><div class='insert-work-icon col-md-1'><i class='fa fa-minus-circle delete-icn' onclick='DeleteElement(this)' style='margin- left:5px;'></i><i class='fa fa-plus-circle last-work' onclick='NewElement()' style='margin-left:5px;'></i></div>");
        newElement.addClass("index" + index);
        newElement.insertAfter(".todo-content:last");
        $(".work-" + index).dxTextBox();
        $(".work-" + index).dxTextBox("instance").option("name", "work");

    };

    function DeleteElement(secili) {
        sayac--;

        $(secili).closest(".form-group").remove();
        $(".todo-content .work-index").each(function (index) {
            $(this).text(index + 1)
        });
        if (!$(".last-work").length) {
            $(".todo-content i:last").addClass("last-work");
            $(".last-work").addClass("fa fa-plus-circle");
        }

        if (sayac == 1) {
            $(".delete-icn").css("display", "none");

            $(".insert-work-icon i:last").addClass("last-work");
            $(".last-work").addClass("fa fa-plus-circle");
        }


    };


</script>