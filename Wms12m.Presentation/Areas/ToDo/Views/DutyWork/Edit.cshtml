@model GorevCalisma
<div class="col-md-12">
    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-gift"></i>Görev Çalışma Düzenle
            </div>
        </div>
        <div class="portlet-body form">
            @using (Ajax.BeginForm("Save", "DutyWork", new { area = "ToDo" }, new AjaxOptions { InsertionMode = InsertionMode.Replace, OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEdit('0');" }, new { @class = "form-horizontal" }))
                {
                @Html.HiddenFor(model => model.ID)
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="form-body">
                    <div class="form-group row pointer">
                        <div class="control-label col-md-1">Görev</div>
                        <div class="col-md-10">
                            @Html.DropDownList("GorevID", null, htmlAttributes: new { @class = "form-control input-circle", @disabled = false  })
                            @Html.ValidationMessageFor(model => model.GorevID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Tarih, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Tarih, new { htmlAttributes = new { id = "Tarih", @class = "form-control input-circle date-picker" } })
                            @Html.ValidationMessageFor(model => model.Tarih, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="control-label col-md-1">Çalışma Süresi</div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CalismaSure, new { htmlAttributes = new { @class = "form-control input-circle" } })
                            @Html.ValidationMessageFor(model => model.CalismaSure, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="control-label col-md-1">Çalışma</div>
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Calisma, 10, 55, new { htmlAttributes = new { @class = "form-control input-circle" } })
                            @Html.ValidationMessageFor(model => model.Calisma, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-5 col-md-7">
                                <center>
                                    <input type="submit" value="Kaydet" class="btn btn-circle green" />
                                    <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                                </center>
                            </div>
                        </div>
                    </div>
                </div>
                }
        </div>
    </div>
</div>

<script type="text/javascript">
    sayac = 1;
    $(document).ready(function () { $('.date-picker').datepicker(); });
    var aciklama = "@Html.Raw(ViewBag.Aciklama)";
    aciklama = aciklama.split("12MConsulting12MDA");
    aciklama.splice(aciklama.length - 1, 1);
    $.each(aciklama, function (index, value) {
        console.log(value);
        console.log(value.substring(5));
            var index = sayac++;

            var newElement = $("<div>").addClass("form-group row todo-content");
            newElement.append("<div class='control-label col-md-1'><div class='checkitem" + index + "'></div></div><div class='col-md-10'><div class='txt-aciklama work-" + index + "' style='border-color: #ece7e7'></div></div>");
            newElement.addClass("index" + index);
            if (index == 1) {
                newElement.insertAfter(".pointer");
            }
            else {
                newElement.insertAfter(".todo-content:last");
            }

            $(".work-" + index).dxTextArea();
            $(".work-" + index).dxTextArea("instance").option({ name: "work", value: value, maxHeight: 80, readOnly: true });
            $(".checkitem" + index).dxCheckBox({
                value: true,
                onValueChanged: function (e) {

                },
                readOnly:true
            });
            $(".checkitem" + index).dxCheckBox("instance").option({ name: "checkitem" });


    });
</script>