@model GorevlerCalisma
<div class="modal-content">
    <div class="close-modal" data-dismiss="modal"><div class="lr"><div class="rl"></div></div></div>
    <div class="container">
        <div class="portlet box green">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Görev Çalışma Düzenle
                </div>
            </div>
            <div class="portlet-body form">
                @using (Ajax.BeginForm("Save", "DutyWork", new { area = "ToDo" }, new AjaxOptions { OnSuccess = "getresult", OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');" }, new { @class = "form-horizontal" }))
                {
                    @Html.HiddenFor(model => model.ID)
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <div class="form-body">
                        <div class="form-group row pointer">
                            @Html.LabelFor(model => model.GorevID, "Görev", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.DropDownList("GorevID", null, htmlAttributes: new { @class = "form-control input-circle", @readonly = "readonly", required = "required" })
                                @Html.ValidationMessageFor(model => model.GorevID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Tarih, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Tarih, new { @Value = Model.Tarih.ToString("dd.MM.yyyy"), id = "Tarih", @class = "form-control input-circle date-picker", required = "required" })
                                @Html.ValidationMessageFor(model => model.Tarih, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Sure, "Çalışma Süresi", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Sure, new { @class = "form-control input-circle", min = "1", max = "540", required = "required" })
                                @Html.ValidationMessageFor(model => model.Sure, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Calisma, "Çalışma", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.Calisma, 10, 55, new { htmlAttributes = new { @class = "form-control input-circle txar-cal", required = "required" } })
                                @Html.ValidationMessageFor(model => model.Calisma, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-8">
                                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal"><i class="fa fa-times"></i> Kapat</button>
                                <input type="submit" value="Kaydet" class="btn green pull-right" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">$(document).ready(function () { $('.date-picker').datepicker(); });</script>