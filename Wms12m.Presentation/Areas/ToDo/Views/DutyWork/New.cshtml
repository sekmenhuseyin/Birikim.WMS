@model GorevCalisma
<div class="modal-content">
    <div class="close-modal" data-dismiss="modal"><div class="lr"><div class="rl"></div></div></div>
    <div class="container">
        <div class="portlet box green">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Çalışma Ekle
                </div>
            </div>
            <div class="portlet-body form">
                @using (Ajax.BeginForm("Save", "DutyWork", new { area = "ToDo" }, new AjaxOptions { OnSuccess = "getresult", OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');" }, new { @class = "form-horizontal" }))
                {
                    @Html.HiddenFor(model => model.ID)
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <div class="form-body">
                        <div class="form-group pointer">
                            <div class="control-label col-md-2">Görev</div>
                            <div class="col-md-8">
                                @Html.DropDownList("GorevID", null, htmlAttributes: new { @class = "form-control input-circle", @readonly = "readonly", required = "required" })
                                @Html.ValidationMessageFor(model => model.GorevID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Tarih, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Tarih, new { @class = "form-control input-circle date-picker", @Value = DateTime.Today.ToShortDateString(), required = "required" })
                                @Html.ValidationMessageFor(model => model.Tarih, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="control-label col-md-2">Çalışma Süresi</div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.CalismaSure, new { @class = "form-control input-circle", min = "1", max = "540", required = "required" })
                                @Html.ValidationMessageFor(model => model.CalismaSure, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="control-label col-md-2">Çalışma</div>
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.Calisma, 10, 55, new { @class = "form-control input-circle txar-cal", required = "required" })
                                @Html.ValidationMessageFor(model => model.Calisma, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-5">
                                    <input type="submit" value="Ekle" class="btn btn-block btn-circle green" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    DevExpress.ui.dxOverlay.baseZIndex(20000);
    $(document).ready(function () { $('.date-picker').datepicker(); });
    sayac = 1;
    @if (ViewBag.RoleName=="Destek" && Model.Gorevler.Kontrol == true)
    {
        foreach (var item in Model.Gorevler.GorevToDoLists.ToList())
        {
            if (item.AktifPasif == true && item.OnayDurum == true && item.Kontrol == true && item.KontrolOnay == false)
            {
                <text>GorevList('@item.Aciklama',@item.ID)</text>
            }
        }
    }
    else {
        foreach (var item in Model.Gorevler.GorevToDoLists.ToList())
        {
            if (item.AktifPasif == true && item.OnayDurum == false)
            {
                <text>GorevList('@item.Aciklama',@item.ID)</text>
            }
        }
    }
    function GorevList(Aciklama, ID) {
        var index = sayac++;
        var newElement = "";
        newElement = $("<div>").addClass("form-group row todo-content");
        newElement.append("<div class='todo-text todo-id" + index + "' style='display:none'></div><div class='checkitem" + index + " col-md-2' style='text-align:right;margin-top: 15px;'></div></div><div class='col-md-8'><div class='txt-aciklama work-" + index + "' style='border-color: #ece7e7'></div></div>");
        newElement.addClass("index" + index);
        if (index == 1) {
            newElement.insertAfter(".pointer");
        }
        else {
            newElement.insertAfter(".todo-content:last");
        }
        $(".work-" + index).dxTextArea();
        $(".work-" + index).dxTextArea("instance").option({ name: "work", value: Aciklama, maxHeight: 80, readOnly: true });
        $(".todo-id" + index).dxTextBox();
        $(".todo-id" + index).dxTextBox("instance").option({ name: "todo", value: ID });
        $(".checkitem" + index).dxCheckBox({
            value: false,
            onValueChanged: function (e) {

            }
        });
        $(".checkitem" + index).dxCheckBox("instance").option({ name: "checkitem" });
    }
</script>
