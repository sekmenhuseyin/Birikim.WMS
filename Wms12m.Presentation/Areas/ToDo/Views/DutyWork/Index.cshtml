@model GorevCalisma

@{
    ViewBag.Title = "Görev Çalışma işlemleri";
    Layout = "~/Views/Shared/_Layout.cshtml";

}@section Styles{<link href="~/Content/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" type="text/css" />
    <style>
        .control-label {
            text-align: right;
            color: black;
        }


       #Calisma {
            border-radius: 1rem !important;
            width: 100% !important;
            height: 100px !important;
        }
        
    </style>
}<div class="page-bar"><ul class="page-breadcrumb"><li><a href="/">Anasayfa</a><i class="fa fa-circle"></i></li><li><span>Proje Form İşlemleri</span></li></ul></div>
<h1 class="page-title">Görev Çalışma İşlemleri</h1>
<div class="row">
    <div class="col-md-12">
        <div class="row" id="CreateEdit">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>Görev Çalışma Ekle

                        </div>
                    </div>
                    <div class="portlet-body form">

                        @using (Ajax.BeginForm("Save", "DutyWork", new { area = "ToDo" }, new AjaxOptions { InsertionMode = InsertionMode.Replace, OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEdit('0');" }, new { @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(model => model.ID)
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-body">
                                <div class="form-group pointer">
                                    <div class="control-label col-md-1">Görev</div>
                                    <div class="col-md-10">
                                        @Html.DropDownList("GorevID", null, htmlAttributes: new { @class = "form-control input-circle", @onchange = "getToDo(this.value);" })
                                        @Html.ValidationMessageFor(model => model.GorevID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Tarih, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Tarih, new { htmlAttributes = new { id = "Tarih", @class = "form-control input-circle date-picker", @Value = "" } })
                                        @Html.ValidationMessageFor(model => model.Tarih, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="control-label col-md-1">Çalışma Süresi</div>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CalismaSure, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.CalismaSure, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="control-label col-md-1">Çalışma</div>
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.Calisma, 10, 55, new { htmlAttributes = new { @class = "form-control input-circle txar-cal" } })
                                        @Html.ValidationMessageFor(model => model.Calisma, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-5 col-md-7">
                                            <center>
                                                <input type="submit" value="Ekle" class="btn btn-circle green" />
                                                <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                                            </center>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        }
                    </div>


                </div>
            </div>
        </div>
        <div id="liste"></div>
    </div>
</div>
@section Scripts{
    <script src="~/Content/assets/global/plugins/moment/moment.min.js"></script>
    <script src="~/Content/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.date-picker').datepicker();
        });
        var DeleteFunctionUrl = '/ToDo/DutyWork /Delete';
        PartialView("/ToDo/DutyWork/List", 'liste');
        function CreateEdit(Id) {
            $("html, body").animate({ scrollTop: 0 }, "slow");
            if (Id == 0) {
                $("#ID").val("0");
                $("#Tarih").val("");
                $("#CalismaSure").val("");
                $("#Calisma").val("");
                setTimeout(function () { window.location.reload(); }, 500);
                //PartialView("/ToDo/DutyWork/List", 'liste');
            }
            else
            { PartialView("/ToDo/DutyWork/Edit", 'CreateEdit', JSON.stringify({ Id: Id })); }
        }

        function getToDo(id) {
            $.ajax({
                url: "/ToDo/DutyWork/GorevToDoList/" + id,
                type: 'POST',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    var sayac = 1;
                    if (data != "") {
                        $.each(data, function (i, item) {
                            if (item.AktifPasif == true && item.OnayDurum == false) {
                                var index = sayac++;
                                var newElement = "";
                                newElement = $("<div>").addClass("form-group row todo-content");
                                newElement.append("<div class='todo-text todo-id" + index + "' style='display:none'></div><div class='checkitem" + index + " col-md-1' style='text-align:right;margin-top: 15px;'></div></div><div class='col-md-10'><div class='txt-aciklama work-" + index + "' style='border-color: #ece7e7'></div></div>");
                                newElement.addClass("index" + index);
                                if (index == 1) {
                                    newElement.insertAfter(".pointer");
                                }
                                else {
                                    newElement.insertAfter(".todo-content:last");
                                }

                                $(".work-" + index).dxTextArea();
                                $(".work-" + index).dxTextArea("instance").option({ name: "work", value: item.Aciklama, maxHeight: 80, readOnly: true });
                                $(".todo-id" + index).dxTextBox();
                                $(".todo-id" + index).dxTextBox("instance").option({ name: "todo", value: item.ID });
                                $(".checkitem" + index).dxCheckBox({
                                    value: false,
                                    onValueChanged: function (e) {

                                    }
                                });
                                $(".checkitem" + index).dxCheckBox("instance").option({ name: "checkitem" });
                            }
                        });
                        
                    }
                }
            });
        }
    </script>
}