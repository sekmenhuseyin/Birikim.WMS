@model ProjeForm
<div class="col-md-12">
    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-gift"></i>@(Model.ID > 0 ? "Proje Düzenle" : "Proje Ekle")
            </div>
        </div>
        <div class="portlet-body form">
            @using (Ajax.BeginForm("Save", "ProjectForm", new { area = "ToDo" }, new AjaxOptions { OnSuccess = "getresult", HttpMethod = "post", OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');" }, new { @class = "form-horizontal" }))
            {
                @Html.HiddenFor(model => model.ID)
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="form-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MusteriID, "Müşteri", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.DropDownList("MusteriID", null, htmlAttributes: new { @class = "form-control input-circle satirekle", required = "required" })
                            @Html.ValidationMessageFor(model => model.MusteriID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Proje, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Proje, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Proje, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Sorumlu, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.DropDownList("Sorumlu", null, htmlAttributes: new { @class = "form-control input-circle satirekle" })
                            @Html.ValidationMessageFor(model => model.Sorumlu, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.KarsiSorumlu, "Karşıdaki Sorumlu", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.KarsiSorumlu, new { htmlAttributes = new { @class = "form-control input-circle" } })
                            @Html.ValidationMessageFor(model => model.KarsiSorumlu, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Aciklama, "Açıklama", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control input-circle" } })
                            @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (ViewBag.RoleName == "Admin" || ViewBag.RoleName == " ")
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.GitAddress, "Git Adı", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.GitAddress, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                @Html.ValidationMessageFor(model => model.GitAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.GitGuid, "Git Guid", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.GitGuid, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                @Html.ValidationMessageFor(model => model.GitGuid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.MesaiKontrol, "Mesai Kontrol", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.CheckBoxFor(model => model.MesaiKontrol, new { @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })
                            @Html.ValidationMessageFor(model => model.MesaiKontrol, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MesaiKota, "Mesai Kota", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.MesaiKota, new { htmlAttributes = new { @class = "form-control input-circle", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.MesaiKota, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Aktif, "Aktif", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.CheckBoxFor(model => model.Aktif, new { @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })
                            @Html.ValidationMessageFor(model => model.Aktif, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-9">
                            <button type="submit" class="btn btn-circle green">@(Model.ID > 0 ? "Düzenle" : "Ekle")</button>
                            <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    $(".satirekle").prepend("<option value=''>Seçiniz !!!</option>");@if (Model.Sorumlu == "" || Model.Sorumlu == null) {<text>$(".satirekle")[1].selectedIndex = 0;</text>}
    $(document).ready(function () {
        $(".make-switch").bootstrapSwitch();
        $('#MesaiKontrol').on('switchChange.bootstrapSwitch', function (e, data) {
            var state = $(this).bootstrapSwitch('state');//returns true or false
            if (state) {
                $('#MesaiKota').prop("readonly", false)
                $('#MesaiKota').prop("required", true)
            }
            else {
                $('#MesaiKota').prop("readonly", true)
                $('#MesaiKota').removeAttr("required")
            }
        });
    });
</script>
