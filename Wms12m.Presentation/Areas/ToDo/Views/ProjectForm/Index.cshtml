@model ProjeForm
@{
    ViewBag.Title = "Proje İşlemleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
}@section Styles{<link href="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.css" rel="stylesheet" type="text/css" />
<link href="~/Content/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" type="text/css" />
<style>.control-label {text-align: right;color: black;}</style>
}<div class="page-bar"><ul class="page-breadcrumb"><li><a href="/">Anasayfa</a><i class="fa fa-circle"></i></li><li><span>Proje İşlemleri</span></li></ul></div>
<h1 class="page-title">Proje İşlemleri</h1>
<div class="row">
    <div class="col-md-12">
        <div class="row" id="CreateEdit">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>Proje Ekle
                        </div>
                    </div>
                    <div class="portlet-body form">
                        @using (Ajax.BeginForm("Save", "ProjectForm", new { area = "ToDo" }, new AjaxOptions { OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "getresult" }, new { @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(model => model.ID, new { @class = "ID" })
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-body">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MusteriID, "Müşteri", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("MusteriID", null, htmlAttributes: new { @class = "form-control input-circle satirekle", required = "required" })
                                        @Html.ValidationMessageFor(model => model.MusteriID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Proje, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Proje, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Proje, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Sorumlu, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("Sorumlu", null, htmlAttributes: new { @class = "form-control input-circle satirekle" })
                                        @Html.ValidationMessageFor(model => model.Sorumlu, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.KarsiSorumlu, "Karşıdaki Sorumlu", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.KarsiSorumlu, new { htmlAttributes = new {  @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.KarsiSorumlu, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Aciklama, "Açıklama", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MesaiKontrol, "Mesai Kontrol", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.CheckBoxFor(model => model.MesaiKontrol, new { id = "MesaiKontrol", @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })
                                        @Html.ValidationMessageFor(model => model.MesaiKontrol, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MesaiKota, "Mesai Kota", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.MesaiKota, new { htmlAttributes = new { id = "MesaiKota", @class = "form-control input-circle", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.MesaiKota, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-3 col-md-9">
                                        <button type="submit" class="btn btn-circle green">@(Model.ID > 0 ? "Düzenle" : "Ekle")</button>
                                        <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div id="liste"></div>
    </div>
</div>
@section Scripts{
<script src="~/Content/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.js" type="text/javascript"></script>
<script type="text/javascript">
    var DeleteFunctionUrl = '/ToDo/ProjectForm/Delete';
    $(document).ready(function () {
        $(".satirekle").prepend("<option value=''>Seçiniz !!!</option>"); $(".satirekle")[0].selectedIndex = 0; $(".satirekle")[1].selectedIndex = 0;
        $("#MesaiKontrol").bootstrapSwitch();
        $('#MesaiKontrol').on('switchChange.bootstrapSwitch', function (e, data) {
            var state = $(this).bootstrapSwitch('state');//returns true or false dfdfd
            if (state) {
                $('#MesaiKota').prop("readonly", false)
                $('#MesaiKota').prop("required", true)
            }
            else {
                $('#MesaiKota').prop("readonly", true)
                $('#MesaiKota').removeAttr("required")
            }
        });
        PartialView("/ToDo/ProjectForm/List", 'liste');
    });
    function getresult(data) {
        if (data.Status == false)
            Modaldialog(data.Message, "Hata", "Tamam", "btn-danger");
        else {
            Modaldialog("Kaydedildi", "Başarı", "Tamam", "btn-success");
            CreateEdit('0');
        }
    };
    function getresult2(data) {
        if (data.Status == false)
            Modaldialog(data.Message, "Hata", "Tamam", "btn-danger");
        else {
            Modaldialog("Kaydedildi", "Başarı", "Tamam", "btn-success");
            CreateEditAltF('0');
        }
    };
    function CreateEditAltF(Id) {
        if (Id == 0) {
            $(".ID2").val("0");
            $("#Form").val("");
            $("#CreateEditAlt .caption").text("Form Ekle");
            $("#CreateEditAlt [type='submit']").text("Ekle");
        }
        else
        {
            $("#modalEditPage").animate({ scrollTop: 0 }, "slow");
            PartialView("/ToDo/ProjectForm/FormEdit", 'CreateEditAlt', JSON.stringify({ Id: Id }));
        }
    }
    function CreateEdit(Id) {
        if (Id == 0) {
            $(".ID").val("0");
            $("#MusteriID").val("");
            $("#Proje").val("");
            $("#Sorumlu").val("");
            $("#KarsiForumlu").val("");
            $("#Aciklama").val("");
            $("#MesaiKota").val("");
            $("#CreateEdit .caption").text("Proje Ekle");
            $("#CreateEdit [type='submit']").text("Ekle");
        }
        else
        {
            $("html, body").animate({ scrollTop: 0 }, "slow");
            PartialView("/ToDo/ProjectForm/Edit", 'CreateEdit', JSON.stringify({ Id: Id }));
        }
    }
</script>
}