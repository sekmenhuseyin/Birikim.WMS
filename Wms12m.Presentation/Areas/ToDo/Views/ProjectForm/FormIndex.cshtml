@model ProjeForm
<div class="modal-content">
    <div class="close-modal" data-dismiss="modal"><div class="lr"><div class="rl"></div></div></div>
    <div class="container">
        <div class="row" id="CreateEditAlt">
            <div class="col-lg-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>Form Ekle
                        </div>
                    </div>
                    <div class="portlet-body form">
                        @using (Ajax.BeginForm("FormSave", "ProjectForm", new { area = "ToDo" }, new AjaxOptions { OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEditAltF('0');" }, new { @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-body">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MusteriID, "Müşteri", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("MusteriID", null, htmlAttributes: new { @class = "form-control input-circle", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.MusteriID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group" style="display:none">
                                    @Html.LabelFor(model => model.PID, "Proje", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("PID", null, htmlAttributes: new { @class = "form-control input-circle", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.PID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Proje, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Proje, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Proje, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Form, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Form, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Form, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-3 col-md-9">
                                        <button type="submit" class="btn btn-circle green">@(Model.ID > 0 ? "Düzenle" : "Ekle")</button>
                                        <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEditAltF('0')">Temizle</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div id="listealt"></div>
    </div>
</div>
<script type="text/javascript">
    var DeleteFunctionUrl = '/ToDo/ProjectForm/Delete';
    PartialView("/ToDo/ProjectForm/ListAlt/@ViewBag.id", 'listealt');
    function CreateEditAltF(Id) {
        $("#modalEditPage").animate({ scrollTop: 0 }, "slow");
        if (Id == 0) {
            $("#ID").val("0");
            $("#Form").val("");
            $("#CreateEditAlt .caption").text("Form Ekle");
            $("#CreateEditAlt [type='submit']").text("Ekle");
            editInModal('/ToDo/ProjectForm/FormIndex/@ViewBag.id');
        }
        else
        {
            PartialView("/ToDo/ProjectForm/FormEdit", 'CreateEditAlt', JSON.stringify({ Id: Id }));
        }

    }
</script>
