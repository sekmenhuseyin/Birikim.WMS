@model Gorevler

@{
    ViewBag.Title = "Görevler";
    Layout = "~/Views/Shared/_Layout.cshtml";

}@section Styles{<link href="~/Content/assets/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/assets/global/plugins/devextreme/css/dx.common.min.css" rel="stylesheet" />
    <link href="~/Content/assets/global/plugins/devextreme/css/dx.light.min.css" rel="stylesheet" />
    <link href="~/Content/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/datatables/datatables.min.css" rel="stylesheet" />
    <link href="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css" rel="stylesheet" />
<style>
    .control-label {
        text-align: right;
        color: black;
    }

    textarea {
        border-radius: 1rem !important;
    }
</style>
}

<div class="page-bar"><ul class="page-breadcrumb"><li><a href="/">Anasayfa</a><i class="fa fa-circle"></i></li><li><span>Proje Form İşlemleri</span></li></ul></div>
<h1 class="page-title">Proje Form İşlemleri</h1>
<div class="row">

    <div class="col-md-12">

        <div class="row" id="CreateEdit">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>Görevler Ekle

                        </div>
                    </div>
                    <div class="portlet-body form">
                        @using (Ajax.BeginForm("Save", "Duties", new { }, new AjaxOptions { InsertionMode = InsertionMode.Replace, OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEdit('0');" }, new { @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(model => model.ID)
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-body">
                                <h4>Gorevler</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ID)

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.ProjeFormID, "ProjeFormID", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("ProjeFormID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.ProjeFormID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Sorumlu, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("Sorumlu", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @*@Html.EditorFor(model => model.Sorumlu, new { htmlAttributes = new { @class = "form-control input-circle" } })*@
                                        @Html.ValidationMessageFor(model => model.Sorumlu, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Sorumlu2, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("Sorumlu2", null, string.Empty, htmlAttributes: new { @class = "form-control input-circle" })
                                        @*@Html.EditorFor(model => model.Sorumlu2, new { htmlAttributes = new { @class = "form-control input-circle" } })*@
                                        @Html.ValidationMessageFor(model => model.Sorumlu2, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Sorumlu3, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("Sorumlu3", null, string.Empty, htmlAttributes: new { @class = "form-control input-circle" })
                                        @*@Html.EditorFor(model => model.Sorumlu3, new { htmlAttributes = new { @class = "form-control input-circle" } })*@
                                        @Html.ValidationMessageFor(model => model.Sorumlu3, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Gorev, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Gorev, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Gorev, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Aciklama, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.TextAreaFor(model => model.Aciklama, 10, 55, new { htmlAttributes = new { @class = "form-control form-rounded" } })
                                        @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.OncelikID, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @*@Html.EditorFor(model => model.OncelikID, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.DropDownList("OncelikID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.OncelikID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.DurumID, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @*@Html.EditorFor(model => model.Durum, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.DropDownList("DurumID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.DurumID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.GorevTipiID, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">

                                        @*@Html.EditorFor(model => model.GorevTipiID, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.DropDownList("GorevTipiID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.GorevTipiID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.DepartmanID, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @*@Html.EditorFor(model => model.DepartmanID, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.DropDownList("DepartmanID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.DepartmanID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.TahminiBitis, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.TahminiBitis, new { htmlAttributes = new { @class = "form-control input-circle date-picker" } })
                                        @Html.ValidationMessageFor(model => model.TahminiBitis, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.BitisTarih, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.BitisTarih, new { htmlAttributes = new { @class = "form-control input-circledate-picker" } })
                                            @Html.ValidationMessageFor(model => model.BitisTarih, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.IslemTip, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.IslemTip, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.IslemTip, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.IslemSira, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.IslemSira, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.IslemSira, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                <div class="form-group" style="display: none;">
                                    @Html.LabelFor(model => model.Kaydeden, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Kaydeden, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Kaydeden, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" style="display: none;">
                                    @Html.LabelFor(model => model.KayitTarih, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.KayitTarih, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.KayitTarih, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-2 col-md-4">
                                            <center>
                                                <input type="submit" value="Ekle" class="btn btn-circle green" />
                                                <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                                            </center>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>
        </div>
        <div id="liste">
        </div>
    </div>


</div>
@section Scripts{
    <script src="~/Content/assets/global/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/Content/assets/global/plugins/devextreme/js/dx.web.js"></script>
    <script src="~/Content/assets/global/plugins/moment/moment.min.js"></script>
    <script src="~/Content/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
    <script src="~/Content/assets/global/plugins/datatables/datatables.min.js"></script>
    <script src="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js"></script>
    <script src="~/Content/assets/global/plugins/jquery-ui/datepicker-tr.js" type="text/javascript"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $('.date-picker').datepicker();
            $(".form-rounded").css("border-radius", "1rem");
        });

        $('.form-rounded').click(function () {
            console.log("qwer");
        });
    var EditURL = '@Url.Action("Edit", "Duties")';
    var DeleteFunctionUrl = '@Url.Action("Delete", "Duties")';
    PartialView("/Duties/List", 'liste');

    function CreateEdit(Id) {
        if (Id == 0) {
            $("#ID").val("0");
            $("#Proje").val("");
            $("#Sorumlu").val("");
            $("#KarsiForumlu").val("");
            $("#Aciklama").val("");
            $("#MesaiKota").val("");
        }
        else
        { PartialView(EditURL, 'CreateEdit', JSON.stringify({ Id: Id })); }

    }
    </script>
}



