@model Store03
@{
    ViewBag.Title = "Raf Kartı işlemleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/Content/assets/global/plugins/bootstrap-touchspin/bootstrap.touchspin.css")" rel="stylesheet" type="text/css" />
<h3 class="page-title">Raf İşlemleri</h3>
<div class="row">
    <div class="col-md-12">
        <div id="CreateEdit">
            <div class="portlet box green">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-gift"></i>Raf Ekle
                    </div>
                </div>
                <div class="portlet-body form">
                    @using (Ajax.BeginForm("ShelfiOperation", "Shelf", new { }, new AjaxOptions{InsertionMode = InsertionMode.Replace,UpdateTargetId = "ShelfFrom",OnSuccess = "ShelfReturn"}, new { @class = "form-horizontal" }))
                    {
                        @Html.HiddenFor(a => a.ID)
                        @Html.HiddenFor(a => a.KoridorID)
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="form-body">
                            <div class="form-group">
                                <label class="col-md-3 control-label">Depo</label>
                                <div class="col-md-4">
                                    @Html.DropDownList("DepoID", null, htmlAttributes: new { @class = "form-control input-circle", required = "required" })
                                    <span class="field-validation-valid" data-valmsg-for="DepoID" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Koridor</label>
                                <div class="col-md-4">
                                    @Html.DropDownListFor(x => x.KoridorID, new SelectList(new List<SelectListItem>(), "ID", "Koridor", Model.KoridorID), "Seçiniz !!!", new { @class = "form-control input-circle", @disabled = "disabled" })
                                    <span class="field-validation-valid" data-valmsg-for="KoridorID" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Raf</label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(a => a.Raf, new { @class = "form-control input-circle", @placeholder = "Raf" })
                                    <span class="field-validation-valid" data-valmsg-for="ShelfName" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Sıra</label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(a => a.SiraNo, new { @id = "touchspin_11", @class = "form-control" })
                                    <span class="field-validation-valid" data-valmsg-for="Sort" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Derinlik</label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(a => a.Derinlik, new { @class = "form-control input-circle" })
                                    <span class="field-validation-valid" data-valmsg-for="Derinlik" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Durum</label>
                                <div class="col-md-4">
                                    @Html.CheckBoxFor(a => a.Aktif, new { @checked = Model.Aktif ? "checked" : string.Empty, @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })

                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-offset-3 col-md-9">
                                    <button type="submit" class="btn btn-circle green ekle-duzenle">@(Model.ID > 0 ? "Düzenle" : "Ekle")</button>
                                    <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div>
            <div class="portlet box green">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-gift"></i>Raf Listesi
                    </div>
                </div>
                <div class="portlet-body form">
                    <div class="form-horizontal">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-xs-12 col-sm-5 col-md-5 col-lg-5">
                                    <div class="form-group">
                                        <div class="radio-list col-xs-12 col-md-12 col-lg-12">
                                            <div class="col-sm-12 col-xs-12">
                                                <label>
                                                    <label style="color:#32c5d2;">Durum</label>
                                                </label>
                                            </div>
                                            <div class="radio-list col-sm-12 col-xs-12">
                                                <label class="radio-inline col-xs-3 col-md-3 col-lg-3" style="padding-left:20px;">
                                                    <input type="radio" name="Locked" value="Locked" /> Aktif
                                                </label>
                                                <label class="radio-inline col-xs-3 col-md-3 col-lg-3">
                                                    <input type="radio" name="Locked" value="noLocked" checked /> Pasif
                                                </label>
                                                <label class="radio-inline col-xs-3 col-md-3 col-lg-3">
                                                    <input type="radio" name="Locked" value="All" checked /> Tümü
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-7">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                        <div class="row">
                                            <label class="control-label col-sm-2 col-md-2 col-lg-2" style="color:#32c5d2;">Depo</label>
                                            <div class="col-sm-8 col-md-8 col-lg-7">
                                                <select id="StoreListi" class="form-control"></select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" style="margin-top:5px;">
                                        <div class="row">
                                            <label class="control-label col-xs-2 col-sm-2 col-md-2 col-lg-2" style="color:#32c5d2;">Koridor</label>
                                            <div class="col-sm-8 col-md-8 col-lg-7">
                                                <select id="CorridorList" class="form-control"></select>
                                            </div>
                                            <div class="col-sm-2 col-md-2 col-lg-2">
                                                <button type="submit" class="btn green ara-btn" id="SearchBtn">Ara</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="ShelfGrid" style="padding:10px;margin-top:18px;"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="@Url.Content("~/Content/assets/global/plugins/fuelux/js/spinner.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/assets/global/plugins/bootstrap-touchspin/bootstrap.touchspin.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/assets/global/scripts/app.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/assets/pages/scripts/components-bootstrap-touchspin.min.js")" type="text/javascript"></script>
<script src="~/Content/Scripts/_Operation.js"></script>
<script type="text/javascript">
    var ShelfGridUrl = '@Url.Action("ShelfGridPartial", "Shelf")';
    var ShelfDetailUrl = '@Url.Action("ShelfDetailPartial", "Shelf")';
    var DeleteFunctionUrl = '@Url.Action("Delete", "Shelf")';
    var CorrridorList = '@Url.Action("SearchCorrridor", "Shelf")';
    var StoreListUrl = '@Url.Action("StoreList", "Corridor")';
    $(document).ready(function () {
        $(".make-switch").bootstrapSwitch();
        @if (@Model.Aktif == false) { <text> $('input[type=checkbox]').prop("checked", true).trigger("change"); </text>}
        StoreList();
        $('#CorridorList').prop('disabled', 'disabled');
        $('#SearchBtn').click(function () {
            FuncSearchBtn();
        });
        $('#StoreListi').on('change', function () {
            if (this.value==0) {
                $("#CorridorList option").remove();
                $('#CorridorList').prop('disabled', 'disabled');
            }
            else {
                CorridorList(this.value);
            }

        })
    });
    $(document).on('change', '.cascading', function () {
        var $dropdown = $(this);
        var selectedValue = $dropdown.val();
        var actionUrl = $dropdown.attr("data-action-url");
        var actionLabel = $dropdown.attr("data-action-label");
        var actionValue = $dropdown.attr("data-action-value");
        var selected = $dropdown.attr("data-action-selected");
        var otherDropDown = $("#" + $dropdown.attr("data-action-dropdown"));
        if (selectedValue != null && selectedValue != '') {
            $.ajax({
                type: "GET",
                url: actionUrl,
                data: { val: selectedValue },
                beforeSend: function (xhr) {
                }
            }).done(function (items) {
                otherDropDown.empty();
                if (actionLabel != null && actionLabel != undefined) {
                    otherDropDown.append($('<option/>', {
                        value: actionValue == "0" ? "0" : "",
                        text: actionLabel
                    }));
                }
                if (items) {
                    otherDropDown.removeAttr("disabled");
                    $.each(items, function (index, item) {
                        if (item.Value == selected) {
                            otherDropDown.append('<option value="' + item.Value + '" selected>' + item.Text + '</option>');
                        } else {
                            otherDropDown.append($('<option/>', {
                                value: item.Value,
                                text: item.Text,
                                selectedValue: selectedValue
                            }));
                        }
                    });
                }
            }).fail(function (xhr, status, error) {
                Failure(error);
            });
        }
        else {
            otherDropDown.empty();
            otherDropDown.attr("disabled", "disabled");
        }
    });
    $('.make-switch').on('switchChange.bootstrapSwitch', function (e, data) {
        $(".make-switch").val(data)
    });
    function FuncSearchBtn() {
        var Type = $("input[type='radio'][name='Locked']:checked").val();
        var StoreId = $("#StoreListi option:selected").val();
        var CorridorId = $("#CorridorList option:selected").val();
        PartialView(ShelfGridUrl, 'ShelfGrid', JSON.stringify({ Id: (Type + "#" + StoreId + "#" + CorridorId) }));
    }
    function CorridorList(Id) {
        $("#CorridorList option").remove();
        $.ajax({
            url: CorrridorList,
            type: 'POST',
            data: JSON.stringify({ Id: Id }),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "") {
                    //alert("Hata Oluştu !!!");
                } else {
                    $("#CorridorList").append("<option value=" + '0' + ">Lütfen Koridor Seçiniz !!!</option>");
                    $("#CorridorList").removeAttr("disabled");
                    $.each(data, function (i, item) {
                        $("#CorridorList").append("<option value=" + item.ID + ">" + item.Koridor + "</option>");
                    });
                }
            }
        });
    }
    function StoreList() {
        $("#StoreListi option").remove();
        $("#StoreListi").append("<option value=" + '0' + ">Lütfen Depo Seçiniz !!!</option>");
        $.ajax({
            url: StoreListUrl,
            type: 'POST',
            data: '',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "") {
                    //Modaldialog("Kaydedilmiş depo bulunmamaktadır.", "Uyarı", "Tamam", "btn-success");
                } else {

                    $.each(data, function (i, item) {
                        $("#StoreListi").append("<option value=" + item.ID + ">" + item.DepoAdi + "</option>");
                    });
                }
            }
        });
    }
    function ShelfReturn(Data) {
        FuncSearchBtn();
        Modaldialog(Data.Message, (Data.Status == true ? "Başaralı" : "Hata"), "Tamam", "btn-success");
        CreateEdit('0');

    }
    function CreateEdit(Id) {
        PartialView(ShelfDetailUrl, 'CreateEdit', JSON.stringify({ Id: Id == null ? '' : Id }));
    }
    function InsertRefresh() {
        PartialView(ShelfDetailUrl, "CreateEdit", '0');
    }
</script>
