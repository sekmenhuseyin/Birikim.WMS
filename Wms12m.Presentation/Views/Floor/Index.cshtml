@model Kat
@{
    ViewBag.Title = "Kat Kartı işlemleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
}@section Styles{<link href="@Url.Content("~/Content/assets/global/plugins/bootstrap-touchspin/bootstrap.touchspin.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.css")" rel="stylesheet" type="text/css" />
}<h3 class="page-title">Kat İşlemleri</h3>
<div class="row">
    <div class="col-md-12">
        <div class="row" id="CreateEdit">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>Kat Ekle
                        </div>
                    </div>
                    <div class="portlet-body form">
                        @using (Ajax.BeginForm("FlooriOperation", "Floor", new { }, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "FloorFrom", OnSuccess = "FloorReturn" }, new { @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(a => a.ID)
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-body">
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Depo</label>
                                    <div class="col-md-4">
                                        @Html.DropDownList("DepoID", null, htmlAttributes: new { @class = "form-control input-circle DepoID", required = "required", @onchange = "getCorridor(this.value,'KoridorID');" })
                                        <span class="field-validation-valid" data-valmsg-for="StoreId" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Koridor</label>
                                    <div class="col-md-4">
                                        @Html.DropDownList("KoridorID", null, htmlAttributes: new { @class = "form-control input-circle KoridorID", required = "required", @onchange = "getShelf(this.value,'RafID');" })
                                        <span class="field-validation-valid" data-valmsg-for="CorrridorId" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Raf</label>
                                    <div class="col-md-4">
                                        @Html.DropDownList("RafID", null, htmlAttributes: new { @class = "form-control input-circle RafID", required = "required", @onchange = "getSection(this.value,'BolumID');" })
                                        <span class="field-validation-valid" data-valmsg-for="ShelfList" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Bölüm</label>
                                    <div class="col-md-4">
                                        @Html.DropDownList("BolumID", null, htmlAttributes: new { @class = "form-control input-circle BolumID", required = "required" })
                                        <span class="field-validation-valid" data-valmsg-for="ShelfList" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Kat</label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(a => a.KatAd, new { @class = "form-control input-circle", @placeholder = "Kat", required = "required" })
                                        <span class="field-validation-valid" data-valmsg-for="KatAd" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">En</label>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(a => a.En, new { @class = "form-control input-circle", @placeholder = "En", required = "required" })
                                        <span class="field-validation-valid" data-valmsg-for="En" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                    <div class="col-md-1">mm</div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Boy</label>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(a => a.Boy, new { @class = "form-control input-circle", @placeholder = "Boy", required = "required" })
                                        <span class="field-validation-valid" data-valmsg-for="Boy" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                    <div class="col-md-1">mm</div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Derinlik</label>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(a => a.Derinlik, new { @class = "form-control input-circle", @placeholder = "Derinlik", required = "required" })
                                        <span class="field-validation-valid" data-valmsg-for="Derinlik" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                    <div class="col-md-1">mm</div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Ağırlık Kapasitesi</label>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(a => a.AgirlikKapasite, new { @class = "form-control input-circle", @placeholder = "Ağırlık Kapasitesi", required = "required" })
                                        <span class="field-validation-valid" data-valmsg-for="AgirlikKapasite" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                    <div class="col-md-1">kg</div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Özellik</label>
                                    <div class="col-md-4">
                                        @Html.DropDownList("Ozellik", null, htmlAttributes: new { @class = "form-control input-circle", required = "required", min="1" })
                                        <span class="field-validation-valid" data-valmsg-for="Ozellik" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Açıklama</label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(a => a.Aciklama, new { @class = "form-control input-circle", @placeholder = "Açıklama" })
                                        <span class="field-validation-valid" data-valmsg-for="Aciklama" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Sıra</label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(a => a.SiraNo, new { @id = "touchspin_11", @class = "form-control" })
                                        <span class="field-validation-valid" data-valmsg-for="Sort" data-valmsg-replace="true" style="color:red;"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Durum</label>
                                    <div class="col-md-4">
                                        @Html.CheckBoxFor(a => a.Aktif, new { @checked = Model.Aktif ? "checked" : string.Empty, @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-3 col-md-9">
                                        <button type="submit" class="btn btn-circle green ekle-duzenle">Ekle</button>
                                        <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div class="portlet box green">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-gift"></i>Kat Listesi
                    </div>
                </div>
                <div class="portlet-body form">
                    <div class="form-horizontal">
                        <div class="form-body">
                            <div class="row">
                                <label class="col-sm-1">
                                    <label style="color:#32c5d2;">Durum</label>
                                </label>
                                <label class="col-sm-1 radio-inline">
                                    <input type="radio" name="Locked" value="Locked" /> Aktif
                                </label>
                                <label class="col-sm-1 radio-inline">
                                    <input type="radio" name="Locked" value="noLocked" /> Pasif
                                </label>
                                <label class="col-sm-1 radio-inline">
                                    <input type="radio" name="Locked" value="All" checked /> Tümü
                                </label>
                                <div class="col-sm-3 col-sm-offset-4" style="color:#32c5d2;">
                                    <div class="row">
                                        <div class="col-sm-4">Depo</div>
                                        <div class="col-sm-8">
                                            @Html.DropDownList("DepoID", null, htmlAttributes: new { @class = "form-control StoreListi input-circle DepoID", @onchange = "getCorridor(this.value,'CorridorList');" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-4">Koridor</div>
                                        <div class="col-sm-8">
                                            <select id="CorridorList" class="form-control input-circle KoridorID" onchange="getShelf(this.value, 'ShelfListi');"></select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-4">Raf</div>
                                        <div class="col-sm-8">
                                            <select id="ShelfListi" class="form-control input-circle RafID" onchange = "getSection(this.value, 'SectionListi');"></select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-4">Bölüm</div>
                                        <div class="col-sm-8">
                                            <select id="SectionListi" class="form-control input-circle BolumID"></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="FloorGrid" style="padding:10px;margin-top:30px;"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
<script src="@Url.Content("~/Content/assets/global/plugins/fuelux/js/spinner.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/assets/global/plugins/bootstrap-touchspin/bootstrap.touchspin.js")" type="text/javascript"></script>
<script src="~/Content/assets/global/scripts/datatable.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>
<script type="text/javascript">
    var FloorGridUrl = '@Url.Action("FloorGridPartial", "Floor")';
    var FloorDetailUrl = '@Url.Action("FloorDetailPartial", "Floor")';
    var DeleteFunctionUrl = '@Url.Action("Delete", "Floor")';
    $(document).ready(function () {
        $(".make-switch").bootstrapSwitch(); $("input[name='Aktif']").val(true);
        $('.make-switch').on('switchChange.bootstrapSwitch', function (event, state) { $("input[name='Aktif']").val(state) });
        @if (Model.Aktif == false) {<text> $(".make-switch").bootstrapSwitch('state', true); $("input[name='Aktif']").val(true); </text>}
        $("#touchspin_11").TouchSpin({ buttondown_class: "btn blue", buttonup_class: "btn red" });
        $("#Ozellik").prepend("<option value=''>Seçiniz !!!</option>"); $("#Ozellik")[0].selectedIndex = 0;
        $(".DepoID").prepend("<option value=''>Seçiniz !!!</option>"); $(".DepoID")[0].selectedIndex = 0; $(".DepoID")[1].selectedIndex = 0;
        $('[name="Locked"]').click(function () { FuncSearchBtn(); });
        $('#SectionListi').on('change', function () { FuncSearchBtn(); })
    });
    function getCorridor(id, what) {
        $("#" + what + " option").remove();
        $('#FloorGrid').html("");
        if (what == "RafID") { $("#RafID option").remove(); $("#RafID").prepend("<option value='0'>Seçiniz !!!</option>"); $("#RafID")[0].selectedIndex = 0; }
        $.ajax({
            url: "/Corridor/CorridorList/" + id,
            type: 'POST',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data != "") {
                    $.each(data, function (i, item) {
                        $('#' + what).append($('<option>', { value: item.Value, text: item.Text }));
                    });
                    $("#" + what).prepend("<option value='0'>Seçiniz !!!</option>"); $("#" + what)[0].selectedIndex = 0;
                }
            }
        });
    }
    function getShelf(id, what) {
        $("#" + what + " option").remove();
        $('#FloorGrid').html("");
        $.ajax({
            url: "/Shelf/ShelfList/" + id,
            type: 'POST',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data != "") {
                    $.each(data, function (i, item) {
                        $('#' + what).append($('<option>', { value: item.Value, text: item.Text }));
                    });
                    $("#" + what).prepend("<option value='0'>Seçiniz !!!</option>"); $("#" + what)[0].selectedIndex = 0;
                }
            }
        });
    }
    function getSection(id, what) {
        $("#" + what + " option").remove();
        $('#FloorGrid').html("");
        $.ajax({
            url: "/Section/SectionList/" + id,
            type: 'POST',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data != "") {
                    $.each(data, function (i, item) {
                        $('#' + what).append($('<option>', { value: item.Value, text: item.Text }));
                    });
                    $("#" + what).prepend("<option value='0'>Seçiniz !!!</option>"); $("#" + what)[0].selectedIndex = 0;
                }
            }
        });
    }
    function FuncSearchBtn() {
        var Type = $("input[type='radio'][name='Locked']:checked").val();
        var StoreId = $(".StoreListi option:selected").val(); if (StoreId == null) StoreId = 0;
        var CorridorId = $("#CorridorList option:selected").val(); if (CorridorId == null) CorridorId = 0;
        var ShelfId = $("#ShelfListi option:selected").val(); if (ShelfId == null) ShelfId = 0;
        var SectionId = $("#SectionListi option:selected").val(); if (SectionId == null) SectionId = 0;
        $('#FloorGrid').html("");
        PartialView(FloorGridUrl, 'FloorGrid', JSON.stringify({ Id: (Type + "#" + StoreId + "#" + CorridorId + "#" + ShelfId + "#" + SectionId) }));
    }
    function FloorReturn(Data) {
        FuncSearchBtn();
        if (Data.Status == false) Modaldialog(Data.Message, "Hata", "Tamam", "btn-warning");
        CreateEdit('0');
    }
    function CreateEdit(Id) {
        if (Id == 0) {
            $("#ID").val("0");
            $("#Kat").val("");
            $("#Boy").val("0");
            $("#En").val("0");
            $("#Derinlik").val("0");
            $("#AgirlikKapasite").val("0");
            $("#Ozellik").val("0");
            $("#Aciklama").val("");
        }
        else
            PartialView(FloorDetailUrl, 'CreateEdit', JSON.stringify({ Id: Id == null ? '' : Id }));
    }
    function InsertRefresh() {
        PartialView(FloorDetailUrl, "CreateEdit", '0');
    }
</script>
}