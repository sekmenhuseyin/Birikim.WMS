@model List<RaporSatilmayanUrunler>
@{
    System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
}
<div class="stk-rapor-grid">

</div>

<script type="text/javascript">

    $(document).ready(function () {

        var model = @Html.Raw(serializer.Serialize(Model));
        GRID_DOLDUR(model);
    });
    function GRID_DOLDUR(model) {
        var _dfd = $.Deferred();
        var result = model;
        for (var i = 0; i < result.length; i++) {
            if(result[i].SonFaturaTarihi!=null)
            var arr = result[i].SonFaturaTarihi.split(".");
            arr[1] = (parseInt(arr[1]) - 1).toString();
            result[i].SonFaturaTarihi = new Date(arr[2],arr[1],arr[0]);
        }
        var columns = [
                    { caption: 'Mal Kodu', dataField: 'MalKodu', width: '180px' },
                    { caption: 'Mal Adi', dataField: 'MalAdi', width: '200px' },
                    { caption: 'Birim', dataField: 'Birim', width: '200px' },
                    { caption: 'Stok Miktar', dataField: 'StokMiktar', width: '200px' , format: { type: 'fixedPoint', precision: 4 },
                        customizeText: function (cellInfo) {
                            //return cellInfo.value;
                            return  cellInfo.valueText.replace(".", "x").replace(",",".").replace("x",",");
                        }
                    },
                    {caption: 'Kritik Stok', dataField: 'KritikStok', width: '130px' , format: { type: 'fixedPoint', precision: 4 },
                        customizeText: function (cellInfo) {
                            //return cellInfo.value;
                            return  cellInfo.valueText.replace(".", "x").replace(",",".").replace("x",",");
                        }
                    },
                    { caption: 'Son Fatura No', dataField: 'SonFaturaNo', width: '180px' },
                    { caption: 'Son Fatura Tarihi', dataField: 'SonFaturaTarihi', dataType: 'date', format: "dd/MM/yyyy", width: '200px' },
                    { caption: 'Son Satis Miktari', dataField: 'SonSatisMiktari', width: '200px' , format: { type: 'fixedPoint', precision: 4 },
                        customizeText: function (cellInfo) {
                            //return cellInfo.value;
                            return  cellInfo.valueText.replace(".", "x").replace(",",".").replace("x",",");
                        }
                    },
                    { caption: 'Son Satış Miktarı Birim', dataField: 'SonSatisMiktariBirim', width: '200px' },

        ];

        _grid_quotations_detail = $('.stk-rapor-grid').dxDataGrid({
            dataSource: model,
            //selection: {
            //    mode: "multiple",
            //},
            "export": {
                enabled: true,
                fileName: "Satılmayan Ürünler Raporu",
            },
            height: function () {
                if(model!=null){
                    if (model.length < 15) {
                        return 130 + (model.length * 34)
                }
                else {
                    return 620;
                }
                }
            },
            onRowPrepared: function (e) {
                e.rowElement.css({ height: 20 });
            },
            paging: { pageSize: 16 },
            columns: columns,
            columnChooser: {
                enabled: true,
                title: 'Kolon Seç',
                height: 180,
                width: 400,
                emptyPanelText: 'Gizlemek İstediğiniz Kolonu Buraya Sürükleyiniz.'
            },
            headerFilter: {
                visible: true
            },
            popupDetailedWindow: true,
            pagingCounter: true,
            filterRow: {
                visible: true,
                applyFilter: 'auto',
                applyFilterText: 'Apply filter',
                resetOperationText: 'Reset'
            },
            scrolling: {
                scrollByContent: true,
                scrollByThumb: true
            },
            allowColumnReordering: true,
            allowColumnResizing: true,
            remoteOperations: true,
            showRowLines: true,
            hoverStateEnabled: true,
            rowAlternationEnabled: false,
            width: '100%',
            groupPanel: {
                visible: true
            },
            sorting: {
                mode: "multiple",
            },
            //onRowClick: function (opt) {

            //    var rdbValue = $(".rdgrpOnayRed").dxRadioGroup("instance").option("value");
            //    if(rdbValue=="OnayBekleyenler"){
            //        if (opt.rowType == "data") {
            //            var component = opt.component;
            //            var prevClickTime = component.lastClickTime;//take last clicked time
            //            component.lastClickTime = new Date();
            //            if (prevClickTime && (component.lastClickTime - prevClickTime < 300)) {//check their difference, if less than 300  it is a double click
            //                window.location.href = '/Home/FaturaDetay?EvrakNo=' + opt.data.EvrakNo;
            //            }
            //        }
            //    }
            //},
        }).dxDataGrid("instance");
    }
</script>



