@model List<RaporCariEkstre>
@{
    System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
}
<div class="stk-rapor-grid">

</div>
<style>
    .dx-datagrid-headers .dx-row {
        color: white;
        border-bottom: 1px solid #D2D2D2;
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#1e5799), color-stop(50%,#2989d8), color-stop(51%,#207cca), color-stop(100%,#7db9e8)); /* Chrome,Safari4+ */
        background: -webkit-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,#7db9e8 100%); /* Chrome10+,Safari5.1+ */
        background: -o-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,#7db9e8 100%); /* Opera 11.10+ */
        background: -ms-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,#7db9e8 100%); /* IE10+ */
        background: linear-gradient(to bottom, #1e5799 0%,#2989d8 50%,#207cca 51%,#7db9e8 100%); /* W3C */
    }

    .dx-datagrid .dx-column-indicators .dx-sort.dx-header-filter:after, .dx-datagrid .dx-column-indicators .dx-header-filter.dx-header-filter:before {
        color: white;
    }
</style>

<script type="text/javascript">

    $(document).ready(function () {
        //Globalize.locale('tr');
        var model =  @Html.Raw(serializer.Serialize(Model));
        GRID_DOLDUR(model);
    });
    function GRID_DOLDUR(model) {
        var _dfd = $.Deferred();
        var result = model;
        for (var i = 0; i < result.length; i++) {
            var arr = result[i].Tarih.split(".");
            arr[1] = (parseInt(arr[1]) - 1).toString();
            result[i].Tarih = new Date(arr[2],arr[1],arr[0]);
            var arr2 = result[i].VadeTarih.split(".");
            arr2[1] = (parseInt(arr2[1]) - 1).toString();
            result[i].VadeTarih = new Date(arr2[2],arr2[1],arr2[0]);
        }
        var columns = [


               { caption: 'Tarih', dataField: 'Tarih', dataType: 'date', format: "'dd/MM/yyyy'", width: '160px',text:"aaaa"},
                { caption: 'Evrak No', dataField: 'EvrakNo', width: '160px' },
               { caption: 'İşlem Tip', dataField: 'IslemTip', width: '160px' },
               { caption: 'Vade Tarihi', dataField: 'VadeTarih', dataType: 'date',type:"number",format:"'dd/MM/yyyy'", width: '160px'},

               { caption: 'Borç', dataField: 'Borc', width: '160px', alignment:'right', format: { type: 'fixedPoint', precision: 2 },

                    customizeText: function (cellInfo) {
                        //return cellInfo.value;
                        return  cellInfo.valueText.replace(".", "x").replace(",",".").replace("x",",");
                    }
               },
                { caption: 'Alacak', dataField: 'Alacak', width: '160px', alignment:'right', format: { type: 'fixedPoint', precision: 2 },
                    customizeText: function (cellInfo) {
                        //return cellInfo.value;
                        return  cellInfo.valueText.replace(".", "x").replace(",",".").replace("x",",");
                    }
                },
               { caption: 'Borç Bakiye', dataField: 'BorcBakiye', width: '160px',alignment:'right', format: { type: 'fixedPoint', precision: 2 },
                   customizeText: function (cellInfo) {
                       //return cellInfo.value;
                       return  cellInfo.valueText.replace(".", "x").replace(",",".").replace("x",",");
                   }
               },

               { caption: 'Alacak Bakiye', dataField: 'AlacakBakiye', width: '160px', alignment:'right', format: { type: 'fixedPoint', precision: 2 },
                   customizeText: function (cellInfo) {
                       //return cellInfo.value;
                       return  cellInfo.valueText.replace(".", "x").replace(",",".").replace("x",",");
                   }
               },




        ];

        _grid_quotations_detail = $('.stk-rapor-grid').dxDataGrid({
            dataSource: model,
            //selection: {
            //    mode: "multiple",
            //},
            "export": {
                enabled: true,
                fileName: "Cari Extre Raporu",
            },
            height: function () {
                if(model!=null){
                    if (model.length < 15) {
                        return 130 + (model.length * 34)
                    }
                    else {
                        return 620;
                    }
                }
            },
            onRowPrepared: function (e) {
                e.rowElement.css({ height: 20 });
            },
            paging: { pageSize: 16 },
            columns: columns,
            columnChooser: {
                enabled: true,
                title: 'Kolon Seç',
                height: 180,
                width: 400,
                emptyPanelText: 'Gizlemek İstediğiniz Kolonu Buraya Sürükleyiniz.'
            },
            headerFilter: {
                visible: true
            },
            popupDetailedWindow: true,
            pagingCounter: true,
            filterRow: {
                visible: true,
                applyFilter: 'auto',
                applyFilterText: 'Apply filter',
                resetOperationText: 'Reset'
            },
            scrolling: {
                scrollByContent: true,
                scrollByThumb: true
            },
            allowColumnReordering: true,
            allowColumnResizing: true,
            remoteOperations: true,
            showRowLines: true,
            hoverStateEnabled: true,
            rowAlternationEnabled: false,
            width: '100%',
            groupPanel: {
                visible: true
            },
            sorting: {
                mode: "multiple",
            },
            //onRowClick: function (opt) {

            //    var rdbValue = $(".rdgrpOnayRed").dxRadioGroup("instance").option("value");
            //    if(rdbValue=="OnayBekleyenler"){
            //        if (opt.rowType == "data") {
            //            var component = opt.component;
            //            var prevClickTime = component.lastClickTime;//take last clicked time
            //            component.lastClickTime = new Date();
            //            if (prevClickTime && (component.lastClickTime - prevClickTime < 300)) {//check their difference, if less than 300  it is a double click
            //                window.location.href = '/Home/FaturaDetay?EvrakNo=' + opt.data.EvrakNo;
            //            }
            //        }
            //    }
            //},
        }).dxDataGrid("instance");
    }
</script>

