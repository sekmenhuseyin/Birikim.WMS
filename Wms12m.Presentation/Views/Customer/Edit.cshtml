@model Musteri
<div class="portlet box green">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-gift"></i>Müşteri Düzenle
        </div>
    </div>
    <div class="portlet-body form">
        @using (Ajax.BeginForm("Save", "Customer", new { }, new AjaxOptions { InsertionMode = InsertionMode.Replace, OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEdit('0');" }, new { @class = "form-horizontal" }))
        {
            @Html.HiddenFor(model => model.ID)
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="form-body">
                <div class="form-group row">
                    @Html.LabelFor(model => model.Firma, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Firma, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.Firma, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Unvan, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Unvan, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.Unvan, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Aciklama, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.MesaiKontrol, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.CheckBoxFor(model => model.MesaiKontrol, new { id = "MesaiKontrol" })
                        @Html.ValidationMessageFor(model => model.MesaiKontrol, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.MesaiKota, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.MesaiKota, new { htmlAttributes = new { id = "MesaiKota", @class = "form-control input-circle", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.MesaiKota, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-actions">
                    <div class="row">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Kaydet" class="btn btn-circle green" />
                            <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    </div>
