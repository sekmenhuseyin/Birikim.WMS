@model Musteri

@{
    ViewBag.Title = "Müşteri işlemleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
   
}@section Styles{<link href="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/datatables/dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.css" rel="stylesheet" type="text/css" />
    
}
<style>
    .control-label{
        text-align:right;
        color:black;
        
    }
</style>
<div class="page-bar"><ul class="page-breadcrumb"><li><a href="/">Anasayfa</a><i class="fa fa-circle"></i></li><li><span>Müşteri İşlemleri</span></li></ul></div>
<h1 class="page-title">Müşteri İşlemleri</h1>
<div class="row">
    <div class="col-md-12">
        <div class="row" id="CreateEdit">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>Müşteri Ekle
                        </div>
                    </div>
                    <div class="portlet-body form">
                        @using (Ajax.BeginForm("Save", "Customer", new { }, new AjaxOptions { InsertionMode = InsertionMode.Replace, OnFailure= "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEdit('0');" }, new { @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(model => model.ID)
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-body">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Firma, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Firma, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Firma, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Unvan, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Unvan, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Unvan, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Aciklama, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                             
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MesaiKontrol, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                            @Html.CheckBoxFor(model => model.MesaiKontrol, new { id = "MesaiKontrol", @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })
                                        @*@Html.CheckBoxFor(model => model.MesaiKontrol, new { @checked = Model.MesaiKontrol ? "checked" : string.Empty, @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })*@
                                            @Html.ValidationMessageFor(model => model.MesaiKontrol, "", new { @class = "text-danger" })
                                       
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MesaiKota, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.MesaiKota, new { htmlAttributes = new {id="MesaiKota", @class = "form-control input-circle",  @readonly = "readonly"  } })
                                        @Html.ValidationMessageFor(model => model.MesaiKota, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-2 col-md-10">
                                            <center>
                                                <input type="submit" value="Ekle" class="btn btn-circle green" />
                                                <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                                            </center>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>
            </div>
        <div id="liste">
        </div>
    </div>


</div>
@section Scripts{
    <script src="~/Content/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/dataTables.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/scripts/datatable.js" type="text/javascript"></script>
<script type="text/javascript">
    $("#MesaiKontrol").bootstrapSwitch();
    $(document).ready(function () {
        $('#MesaiKontrol').on('switchChange.bootstrapSwitch', function (e, data) {
            var state = $(this).bootstrapSwitch('state');//returns true or false

            if (state) {
                $('#MesaiKota').prop("readonly", false)
            }
            else {
                $('#MesaiKota').prop("readonly", true)
            }
        });
    });
    var EditURL = '@Url.Action("Edit", "Customer")';
    var DeleteFunctionUrl = '@Url.Action("Delete", "Customer")';
    PartialView("/Customer/List", 'liste');

    function CreateEdit(Id) {
        if (Id == 0) {
            $("#ID").val("0");
            $("#Unvan").val("");
            $("#Firma").val("");
            $("#Aciklama").val("");
            $("#Email").val("");
            $("#MesaiKota").val("");
        }
        else
        { PartialView(EditURL, 'CreateEdit', JSON.stringify({ Id: Id })); }

    }
</script>
}