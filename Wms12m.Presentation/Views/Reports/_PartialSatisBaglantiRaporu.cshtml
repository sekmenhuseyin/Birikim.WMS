@model List<SatisBaglatiRapru>
@{
    System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
}

<div class="col-md-12" style="width:100%;">
    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-gift"></i>Satış Bağlantı Raporu
            </div>
            <div class="col-md-1 pull-right m-t-5" style="padding:0;">
                <a class="btn btn-default pull-right input-circle" style="width:100%;" href="#modalEditPage" data-toggle="modal"> Yenile </a>
            </div>
            <div class="col-md-1 pull-right m-t-5" style="padding:0;">
                <a class="btn btn-default pull-right input-circle" style="width:100%;" href="#modalEditPage" data-toggle="modal"> Export Data </a>
            </div>
            <div class="col-md-1 pull-right m-t-5" style="padding:0;">
                <a class="btn btn-default pull-right input-circle" style="width:100%;" href="#modalEditPage" data-toggle="modal"> Temizle </a>
            </div>

        </div>

        <div class="portlet-body">

            <div class="row">
                <table class="table table-striped table-bordered table-condensed" id="sample_1">
                    <thead>
                        <tr>
                            <th nowrap>Hesap Kodu</th>
                            <th nowrap>Unvan</th>
                            <th nowrap>Bakiye</th>
                            <th nowrap>Bağlantı Tarihi</th>
                            <th nowrap>Bağlantı No</th>
                            <th nowrap>Sözleşme Sıra No</th>
                            <th nowrap>Bağlantı Tipi</th>
                            <th nowrap>Bağlantı Tutarı</th>
                            <th nowrap>Bağlantı Para Cinsi</th>
                            <th nowrap>Toplam Sevkedilen Tutar</th>
                            <th nowrap>Kalan Tutar</th>
                            <th nowrap>Devir Tarihi</th>
                            <th nowrap>Devir Tutarı</th>
                            <th nowrap>Devirden Sonra Sevkedilen</th>
                            <th nowrap>Bağlantı Bitiş Tarihi</th>
                            <th style="width:20px;">Detay</th>
                            <th style="width:20px;">Hareket</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th nowrap colspan="7"></th>
                            <th nowrap style="text-align:right;"></th>
                            <th nowrap style="text-align:right;"></th>
                            <th nowrap style="text-align:right;"></th>
                            <th nowrap style="text-align:right;"></th>
                            <th nowrap style="text-align:right;"></th>
                            <th nowrap style="text-align:right;"></th>
                            <th nowrap style="text-align:right;"></th>
                            <th nowrap colspan="3"></th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var item in Model)
            {
                            <tr>
                                <td nowrap>@item.HesapKodu</td>
                                <td nowrap>@item.Unvan</td>
                                <td nowrap>@String.Format("{0:0.00}", item.Bakiye).ToDecimal().ToOnFormat()</td>
                                <td nowrap>@item.BaglantiTarihi.Value.ToString("dd/MM/yyyy")</td>
                                <td nowrap>@item.BaglantiNo</td>
                                <td nowrap>@item.SozlesmeSiraNo</td>
                                <td nowrap>@item.BaglantiTipi</td>
                                <td nowrap align="right">@String.Format("{0:0.00}", item.BaglantiTutari).ToDecimal().ToOnFormat()</td>
                                <td nowrap>@item.BaglantiParaCinsi</td>
                                <td nowrap align="right">@String.Format("{0:0.00}", item.ToplamSevkEdilenTutar).ToDecimal().ToOnFormat()</td>
                                <td nowrap align="right">@String.Format("{0:0.00}", item.KalanTutar).ToDecimal().ToOnFormat()</td>
                                <td nowrap>@item.DevirTarih</td>
                                <td nowrap align="right">@String.Format("{0:0.00}", item.DevirTutar).ToDecimal().ToOnFormat()</td>
                                <td nowrap align="right">@String.Format("{0:0.00}", item.DevirdenSonrakiSevkedilen).ToDecimal().ToOnFormat()</td>
                                <td nowrap>@item.BaglantiBitisTarihi.Value.ToString("dd/MM/yyyy")</td>
                                <td nowrap class='details-control' style="width:20px;"> </td>
                                <td nowrap class='hareket-control' style="width:20px;"> </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var model =  @Html.Raw(serializer.Serialize(Model));
        table = $('#sample_1').DataTable({
            "language": { "url": "http://cdn.datatables.net/plug-ins/1.10.13/i18n/Turkish.json" },
            "footerCallback": function (row, data, start, end, display) {

                var api = this.api(), data;
                var intVal = function (i) {
                    return Number(i.toString().replace(/\./g, "").replace(",", "."))
                };
                alacaktotal = api
                    .column(7)
                    .data()
                    .reduce(function (a, b) {
                        console.log(a + intVal(b));
                        return a + intVal(b);
                    }, 0);

                borctotal = api
                    .column(9)
                    .data()
                    .reduce(function (a, b) {
                        return a + intVal(b);
                    }, 0);
                aa = api
                    .column(10)
                    .data()
                    .reduce(function (a, b) {
                        console.log(a + intVal(b));
                        return a + intVal(b);
                    }, 0);

                bb = api
                    .column(12)
                    .data()
                    .reduce(function (a, b) {
                        return a + intVal(b);
                    }, 0);
                cc = api
                    .column(13)
                    .data()
                    .reduce(function (a, b) {
                        return a + intVal(b);
                    }, 0);
                $(api.column(7).footer()).html(
                    ondalikBinlik(Math.round(alacaktotal * 100) / 100, 2)
                );
                $(api.column(9).footer()).html(
                    ondalikBinlik(Math.round(borctotal * 100) / 100, 2)
                );
                $(api.column(10).footer()).html(
                    ondalikBinlik(Math.round(aa * 100) / 100, 2)
                );
                $(api.column(12).footer()).html(
                    ondalikBinlik(Math.round(bb * 100) / 100, 2)
                );
                $(api.column(13).footer()).html(
                    ondalikBinlik(Math.round(cc * 100) / 100, 2)
                );
            }
        });
 
    });
    $('#sample_1 tbody').on('click', '.details-control', function () {
        var tr = $(this).closest('tr');
        var hesKod = "";
        var bagNo = "";
        table
            .rows('.aa')
            .nodes()
            .to$()      // Convert to a jQuery object
            .removeClass('aa');
        tr.addClass("aa");
        var x = table.rows('.aa').data();
        jQuery.each(model, function (i, val) {
            if (model[i]["HesapKodu"].toString().trim() == x[0][0]) {
                hesKod = model[i]["HesapKodu"];
            }
            if (model[i]["BaglantiNo"].toString().trim() == x[0][4]) {
                bagNo = model[i]["BaglantiNo"];
            }
        });
        $(".form-rounded").css("border-radius", "1rem");
        $(".valor_content").css("display", "none");
        $(".txt_sira_no").dxTextBox({ readOnly: true });
        $(".txt_sozlesme_sira_no").dxTextBox();
        $(".txt_sozlesme_notu").dxTextBox();
        $(".txt_ortalama_vade").dxTextBox({ readOnly: true });
        $(".txt_alinan_bordro_ort").dxTextBox({ readOnly: true });
        $(".date_baslangic_tarihi").dxDateBox();
        $(".date_bitis_tarihi").dxTextBox();
        $(".date_vade_tarihi").dxTextBox();
        $(".date_alinan_cek_ort_vade").dxTextBox();
        $(".swtch_vade_valor").dxTextBox();

        $(".txt_sira_no").dxTextBox();
        NumbBox(".numb_baglanti_tutari", false, 2);
        NumbBox(".numb_valor_gun", false, 0);
        NumbBox(".numb_kredi_limiti", true, 2);
        NumbBox(".numb_bakiye", true, 4);
        NumbBox(".numb_toplam_bakiye", true, 4);
        NumbBox(".numb_bekleyen_siparis", true, 2);
        NumbBox(".numb_alinan_bordro", true, 2);
        NumbBox(".numb_alinan_cek_tutari", false, 2);
        NumbBox(".numb_alinan_nakit_vb", false, 2);

        $(".numb_toplam_tahsilat").dxTextBox({readOnly: true});
        var bagTipi = [{ Tip: "Peşin" }, { Tip: "Vadeli" }, { Tip: "Kredi Kart" }, { Tip: "Kampanya" }]
        $(".select_baglanti_tipi").dxTextBox({ readOnly: true});
        var dvzCins = [{ Tip: "TL" }, { Tip: "EUR" }, { Tip: "USD" }]
        $(".select_baglanti_tutari_doviz").dxTextBox({ readOnly: true });
        $.ajax({
            url: window.location.origin + "/Approvals/Contract/List?tip=0",
            data: {},
            type: "post",
            success: function (data) {
                var result = JSON.parse(data);
                $(".select_sozlesmeler").dxLookup("instance").option("dataSource", result);
            }
        });

        $.ajax({
            url: window.location.origin + "/Approvals/Price/HesapKoduSelect",
            data: {},
            type: "post",
            success: function (data) {
                var result = JSON.parse(data);
                $(".select_musteri_kodu").dxLookup("instance").option("dataSource", result);
            }
        });

        $(".select_sozlesmeler").dxLookup({
            //dataSource: model,
            searchEnabled: true,
            fullScreen: true,
            pageLoadMode: "nextButton",
            searchExpr: ["ListeNo", "MusteriKod", "Unvan", "OnayMerci"],
            valueExpr: 'ListeNo',
            displayExpr: 'ListeNo',
            value: bagNo,
            onValueChanged: function (e) {
                if (e.value == null) {
                    $(".txt_sozlesme_sira_no").dxTextBox("instance").option("value", "");
                    return;
                }

                PartialView("/Approvals/Contract/Tanim_List", 'sozlesme_tanim_data', JSON.stringify({ listeNo: e.value }));
                $.ajax({
                    url: window.location.origin + "/Approvals/Contract/ISSTempList?SozlesmeNo=" + e.value,
                    data: {},
                    type: "post",
                    success: function (data) {
                        var result = JSON.parse(data);
                        if ($(".swtch_sozlesme_durumu").dxSwitch("instance").option("value") == true) {
                            MusteriUygunlukKodu = result[0].MusUygSekli;
                        }
                        else {
                            MusteriUygunlukKodu = "";
                        }
                        $(".numb_baglanti_tutari").dxTextBox("instance").option("value", result[0].Kod11);
                        $(".select_fiyat_listesi").dxLookup("instance").option("value", null);
                        $(".select_urun_grubu").dxSelectBox("instance").option("value", null);
                        $(".select_urun_kodu").dxLookup("instance").option("value", null);
                        $(".txt_sira_no").dxTextBox("instance").option("value", result[0].Kod2);
                        $(".txt_sozlesme_sira_no").dxTextBox("instance").option("value", result[0].ListeNo);
                        $(".select_baglanti_tipi").dxSelectBox("instance").option("value", result[0].Kod1);
                        if (result[0].BaglantiParaCinsi == null) {
                            $(".select_baglanti_tutari_doviz").dxSelectBox("instance").option("value", "TL");
                        }
                        else {
                            $(".select_baglanti_tutari_doviz").dxSelectBox("instance").option("value", result[0].BaglantiParaCinsi);
                        }
                        $(".date_baslangic_tarihi").dxDateBox("instance").option("value", new Date(((result[0].BasTarih - 25569) * 86400000)));
                        $(".date_bitis_tarihi").dxDateBox("instance").option("value", new Date(((result[0].BitTarih - 25569) * 86400000)));
                        $(".select_musteri_kodu").dxLookup("instance").option("value", result[0].MusteriKod);
                        $(".txt_sozlesme_notu").dxTextBox("instance").option("value", result[0].Aciklama);
                        $(".swtch_aktif_pasif").dxSwitch("instance").option("value", result[0].AktifPasif);
                        $(".numb_alinan_cek_tutari").dxTextBox("instance").option("value", result[0].CekTutari);
                        $(".date_alinan_cek_ort_vade").dxDateBox("instance").option("value", new Date(new Date(result[0].CekOrtalamaVadeTarih.match(/\d+/)[0] * 1)));
                        $(".numb_alinan_nakit_vb").dxTextBox("instance").option("value", result[0].NakitTutari);

                        if (result[0].ValorGun > 1) {
                            $(".numb_valor_gun").dxTextBox("instance").option("value", result[0].ValorGun);
                            $(".date_vade_tarihi").dxDateBox("instance").option("value", null);
                            $(".vade_content").css("display", "none");
                            $(".valor_content").css("display", "block");
                        }
                        else if (result[0].VadeTarihi != null) {
                            $(".date_vade_tarihi").dxDateBox("instance").option("value", new Date(((result[0].VadeTarihi - 25569) * 86400000)));
                            $(".numb_valor_gun").dxTextBox("instance").option("value", 0);
                            $(".valor_content").css("display", "none");
                            $(".vade_content").css("display", "block");
                        }
                        else {
                            $(".numb_valor_gun").dxTextBox("instance").option("value", 0);
                            $(".date_vade_tarihi").dxDateBox("instance").option("value", null);
                            $(".valor_content").css("display", "none");
                            $(".vade_content").css("display", "block");
                        }
                        $(".numb_toplam_tahsilat").dxTextBox("instance").option("value", (result[0].CekTutari == null ? 0 : result[0].CekTutari) + (result[0].NakitTutari == null ? 0 : result[0].NakitTutari));

                    }
                });
            },

            itemTemplate: function (itemData, itemIndex, itemElement) {
                itemElement.css({ "text-align": "left", "border-bottom": "1px solid #2fc1d8" });
                if (itemIndex > 0) {
                    itemElement.css({ "margin-top": "-40px" });
                }
                var rightBlock = $("<div style=' margin: 2px; width:100%;'>");
                rightBlock.append("<div><p style='font-size:11px; font-weight:bold; line-height: 0%;color:#12ccee;'><b>" + itemData.Unvan + "</b></p>");
                rightBlock.append("<span style='line-height: 0%;font-size:11px;font-weight:bold;'>ListeNo: <i style='font-weight:normal;'>" + itemData.ListeNo + "</i></span><span style='line-height: 0%;font-size:11px;font-weight:bold;margin-left:25px;'>Musteri Kodu: <i style='font-weight:normal;'>" + itemData.MusteriKod + "</i></span><span style='line-height: 0%;font-size:11px;font-weight:bold;margin-left:25px;'>OnayMerci: <i style='font-weight:normal;'>" + itemData.OnayMerci + "</i></span></div>");
                itemElement.append(rightBlock);
            }
        });
        $(".select_urun_kodu").dxLookup({
            //dataSource: result,
            searchEnabled: true,
            pageLoadMode: "nextButton",
            searchExpr: ["Kod", "Aciklama"],
            //valueExpr: 'Kod',
            displayExpr: 'Kod',
            onValueChanged: function (e) {
                if (e.value == null) {
                    TempMalKod = "";
                    return;
                }
                TempMalKod = e.value.Kod;
                if (TempUrunGrup == 0) {
                    TempMalAdi = e.value.Aciklama
                }
            },
            itemTemplate: function (itemData, itemIndex, itemElement) {
                itemElement.css({ "text-align": "left", "border-bottom": "1px solid #2fc1d8" });
                if (itemIndex > 0) {
                    itemElement.css({ "margin-top": "-40px" });
                }
                var rightBlock = $("<div style=' margin: 2px; width:100%;'>");
                rightBlock.append("<div><p style='font-size:11px; font-weight:bold; line-height: 0%;'><b>" + itemData.Aciklama + "</b></p>");
                rightBlock.append("<p style='line-height: 0%;font-size:11px;'>Kod: <i>" + itemData.Kod + "</i></p></div>");
                itemElement.append(rightBlock);
            }
        });
        $(".select_fiyat_listesi").dxLookup({
            //dataSource: model,
            searchEnabled: true,
            pageLoadMode: "nextButton",
            searchExpr: ["FiyatListNum", "FiyatListName"],
            valueExpr: 'FiyatListNum',
            displayExpr: 'FiyatListName',

            onValueChanged: function (e) {
                if (e.value == null) {
                    listeNo = "";
                    return;
                }
                listeNo = e.value;
            },

            itemTemplate: function (itemData, itemIndex, itemElement) {
                itemElement.css({ "text-align": "left", "border-bottom": "1px solid #2fc1d8" });
                if (itemIndex > 0) {
                    itemElement.css({ "margin-top": "-40px" });
                }
                var rightBlock = $("<div style=' margin: 2px; width:100%;'>");
                rightBlock.append("<div><p style='font-size:11px; font-weight:bold; line-height: 0%;'><b>" + itemData.FiyatListName + "</b></p>");
                rightBlock.append("<p style='line-height: 0%;font-size:11px;'>Liste No: <i>" + itemData.FiyatListNum + "</i></p></div>");
                itemElement.append(rightBlock);
            }
        });
        $(".select_musteri_kodu").dxLookup({
            //dataSource: model,
            searchEnabled: true,
            pageLoadMode: "nextButton",
            searchExpr: ["HesapKodu", "Unvan"],
            valueExpr: 'HesapKodu',
            displayExpr: 'Unvan',

            onValueChanged: function (e) {
                if (e.value == null) {
                    return;
                }
                var listeNo = $(".select_sozlesmeler").dxLookup("instance").option("value");
                $.ajax({
                    url: window.location.origin + "/Approvals/Contract/CariBilgileri?ListeNo=" + listeNo + "&HesapKodu=" + e.value,
                    data: {},
                    type: "post",
                    success: function (data) {
                        var result = JSON.parse(data);
                        $(".numb_kredi_limiti").dxTextBox("instance").option("value", result[0].KrediLimiti);
                        $(".numb_bakiye").dxTextBox("instance").option("value", result[0].Bakiye);
                        $(".numb_toplam_bakiye").dxTextBox("instance").option("value", result[0].ToplamBakiye);
                        $(".numb_bekleyen_siparis").dxTextBox("instance").option("value", result[0].BekleyenSiparisTutar);
                        $(".numb_alinan_bordro").dxTextBox("instance").option("value", result[0].AlinanBordro);
                        $(".txt_alinan_bordro_ort").dxTextBox("instance").option("value", result[0].AlinanBordroOrtalamaVade == null ? "" : result[0].AlinanBordroOrtalamaVade);
                        $(".txt_ortalama_vade").dxTextBox("instance").option("value", result[0].OrtalamaVade == null ? "" : result[0].OrtalamaVade);
                    }
                });
            },

            itemTemplate: function (itemData, itemIndex, itemElement) {
                itemElement.css({ "text-align": "left", "border-bottom": "1px solid #2fc1d8" });
                if (itemIndex > 0) {
                    itemElement.css({ "margin-top": "-40px" });
                }
                var rightBlock = $("<div style=' margin: 2px; width:100%;'>");
                rightBlock.append("<div><p style='font-size:11px; font-weight:bold; line-height: 0%;'><b>" + itemData.Unvan + "</b></p>");
                rightBlock.append("<p style='line-height: 0%;font-size:11px;'>Hesap Kodu: <i>" + itemData.HesapKodu + "</i></p></div>");
                itemElement.append(rightBlock);
            }
        });



        $.ajax({
            type: 'POST',
            url: '/Reports/CariDetayCek',
            data: { "CHK": chk, "EvrakNo": hesKod },
            dataType: "html",
            success: function (data) {
                $('#x-modal-cari-detay-cek').modal("show");
                var result = JSON.parse(data);
                var columns = [
                    {
                        caption: 'Borçlu Ünvan', dataField: 'BorcluUnvan',
                        customizeText: function (cellInfo) {
                            if (cellInfo.value != null) return formatDateFromJson(cellInfo.value); else return "";
                        }
                    },
                    { caption: 'Tutar', dataField: 'Tutar', format: 'fixedPoint', precision: 2 },
                    {
                        caption: 'Vade Tarihi', dataField: 'VadeTarihi',
                        customizeText: function (cellInfo) {
                            if (cellInfo.value != null) return formatDateFromJson(cellInfo.value); else return "";
                        }
                    },
                    { caption: 'Şehir', dataField: 'Sehir' },
                    { caption: 'Banka', dataField: 'Banka' },
                    { caption: 'Şube', dataField: 'Sube' },
                    { caption: 'Çek No', dataField: 'CekNo' },
                ];
                _grid_quotations_detail = $('.grid_cari-detay-cek').dxDataGrid({
                    dataSource: result,
                    height: 400,
                    paging: { pageSize: 5000 },
                    columns: columns,
                    headerFilter: {
                        visible: true
                    },
                    popupDetailedWindow: true,
                    columnAutoWidth: true,
                    pagingCounter: true,
                    filterRow: {
                        visible: true,
                        applyFilter: 'auto',
                        applyFilterText: 'Apply filter',
                        resetOperationText: 'Reset'
                    },
                    scrolling: {
                        scrollByContent: true,
                        scrollByThumb: true
                    },
                    allowColumnReordering: true,
                    allowColumnResizing: true,
                    remoteOperations: true,
                    showRowLines: true,
                    hoverStateEnabled: true,
                    rowAlternationEnabled: false,
                    sorting: {
                        mode: "multiple",
                    },

                    onRowClick: function (opt) {
                        if (opt.rowType == "data") {
                            var component = opt.component;
                            var prevClickTime = component.lastClickTime;//take last clicked time
                            component.lastClickTime = new Date();
                            if (prevClickTime && (component.lastClickTime - prevClickTime < 300)) {//check their difference, if less than 300  it is a double click
                                //PartialView("/Approval/PartialTeminatTanim", 'teminat_tanim_data', JSON.stringify({ chk: opt.data.HesapKodu }));
                            }
                        }
                    },
                    onCellPrepared: function (info) {
                        if (info.rowType == "data") {
                            if (info.column.dataField == "Tarih" && info.value == "VadeTarih") {
                                info.cellElement.css({ "background-color": "#ea3d75", "color": "white" });
                            }
                        }
                    }
                }).dxDataGrid("instance");
            }
        });


    });
    $('#sample_1 tbody').on('click', '.hareket-control', function () {
        var tr = $(this).closest('tr');
        var hesKod = "";
        table
            .rows('.aa')
            .nodes()
            .to$()      // Convert to a jQuery object
            .removeClass('aa');
        tr.addClass("aa");
        var x = table.rows('.aa').data();
        jQuery.each(model, function (i, val) {
            if (model[i]["EvrakNo"].toString().trim() == x[0][2]) {
                hesKod = model[i]["EvrakNo"];
            }
        });
        $.ajax({
            type: 'POST',
            url: '/Reports/CariDetayCek',
            data: { "CHK": chk, "EvrakNo": hesKod },
            dataType: "html",
            success: function (data) {
                $('#x-modal-cari-detay-cek').modal("show");
                var result = JSON.parse(data);
                var columns = [
                    {
                        caption: 'Borçlu Ünvan', dataField: 'BorcluUnvan',
                        customizeText: function (cellInfo) {
                            if (cellInfo.value != null) return formatDateFromJson(cellInfo.value); else return "";
                        }
                    },
                    { caption: 'Tutar', dataField: 'Tutar', format: 'fixedPoint', precision: 2 },
                    {
                        caption: 'Vade Tarihi', dataField: 'VadeTarihi',
                        customizeText: function (cellInfo) {
                            if (cellInfo.value != null) return formatDateFromJson(cellInfo.value); else return "";
                        }
                    },
                    { caption: 'Şehir', dataField: 'Sehir' },
                    { caption: 'Banka', dataField: 'Banka' },
                    { caption: 'Şube', dataField: 'Sube' },
                    { caption: 'Çek No', dataField: 'CekNo' },
                ];
                _grid_quotations_detail = $('.grid_cari-detay-cek').dxDataGrid({
                    dataSource: result,
                    height: 400,
                    paging: { pageSize: 5000 },
                    columns: columns,
                    headerFilter: {
                        visible: true
                    },
                    popupDetailedWindow: true,
                    columnAutoWidth: true,
                    pagingCounter: true,
                    filterRow: {
                        visible: true,
                        applyFilter: 'auto',
                        applyFilterText: 'Apply filter',
                        resetOperationText: 'Reset'
                    },
                    scrolling: {
                        scrollByContent: true,
                        scrollByThumb: true
                    },
                    allowColumnReordering: true,
                    allowColumnResizing: true,
                    remoteOperations: true,
                    showRowLines: true,
                    hoverStateEnabled: true,
                    rowAlternationEnabled: false,
                    sorting: {
                        mode: "multiple",
                    },

                    onRowClick: function (opt) {
                        if (opt.rowType == "data") {
                            var component = opt.component;
                            var prevClickTime = component.lastClickTime;//take last clicked time
                            component.lastClickTime = new Date();
                            if (prevClickTime && (component.lastClickTime - prevClickTime < 300)) {//check their difference, if less than 300  it is a double click
                                //PartialView("/Approval/PartialTeminatTanim", 'teminat_tanim_data', JSON.stringify({ chk: opt.data.HesapKodu }));
                            }
                        }
                    },
                    onCellPrepared: function (info) {
                        if (info.rowType == "data") {
                            if (info.column.dataField == "Tarih" && info.value == "VadeTarih") {
                                info.cellElement.css({ "background-color": "#ea3d75", "color": "white" });
                            }
                        }
                    }
                }).dxDataGrid("instance");
            }
        });


    });
    setTimeout(function () { $("td").removeClass('sorting_1'); }, 0);
    $('#sample_1').on('draw.dt', function () {
        setTimeout(function () { $("td").removeClass('sorting_1'); }, 0);
    });
</script>


