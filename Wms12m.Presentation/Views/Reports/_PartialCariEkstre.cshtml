@model List<RaporCariEkstre>
@{
    System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
}
<div class="col-md-12" style="width:100%;">
    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-gift"></i>Cari Ekstre
            </div>
            <div class="col-md-1 pull-right m-t-5">
                <a class="btn btn-default pull-right input-circle" href="#modalEditPage" data-toggle="modal"> Yenile </a>
            </div>
            <div class="col-md-1 pull-right m-t-5">
                <a class="btn btn-default pull-right input-circle" href="#modalEditPage" data-toggle="modal"> Export Data </a>
            </div>
            <div class="col-md-1 pull-right m-t-5">
                <a class="btn btn-default pull-right input-circle" href="#modalEditPage" data-toggle="modal"> Temizle </a>
            </div>

        </div>

        <div class="portlet-body">


            <table class="table table-striped table-bordered table-condensed" id="sample_1">
                <thead>
                    <tr>
                        <th nowrap>Tarih</th>
                        <th nowrap>Evrak No</th>
                        <th nowrap>İşlem Tipi</th>
                        <th nowrap>Vade Tarihi</th>
                        <th nowrap>Borç</th>
                        <th nowrap>Alacak</th>
                        <th nowrap>Borç Bakiye</th>
                        <th nowrap>Alacak Bakiye</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th nowrap colspan="4"></th>
                        <th nowrap style="text-align:right;"></th>
                        <th nowrap style="text-align:right;"></th>
                        <th nowrap style="text-align:right;"></th>
                        <th nowrap style="text-align:right;"></th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model)
            {
                        <tr>
                            
                            <td nowrap>@item.Tarih.Value.ToString("dd/MM/yyyy")</td>
                            <td nowrap>@item.EvrakNo</td>
                            <td nowrap>@item.IslemTip</td>
                            <td nowrap>@item.VadeTarih.Value.ToString("dd/MM/yyyy")</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.Borc).ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.Alacak).ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.BorcBakiye).ToDecimal().ToOnFormat()</td>
                            <td nowrap align="right">@String.Format("{0:0.00}", item.AlacakBakiye).ToDecimal().ToOnFormat()</td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $.extend(jQuery.fn.dataTableExt.oSort, {
            "date-uk-pre": function (a) {
                return parseInt(moment(a, "DD/MM/YYYY").format("X"), 10);
            },
            "date-uk-asc": function (a, b) {
                return a - b;
            },
            "date-uk-desc": function (a, b) {
                return b - a;
            }
        });
        var edit_date_col_num = $('th:contains("Tarih")').index();
        var model =  @Html.Raw(serializer.Serialize(Model));
        $('#sample_1').DataTable({
            "order": [[0, "asc"]],
            "language": { "url": "http://cdn.datatables.net/plug-ins/1.10.13/i18n/Turkish.json" },
            "columnDefs": [
                { "type": "date-uk", targets: [edit_date_col_num] }
            ],
            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return Number(i.toString().replace(/\./g, "").replace(",", "."))
                };

                // Total over all pages
                alacaktotal = api
                    .column(5)
                    .data()
                    .reduce(function (a, b) {
                        return a + intVal(b);
                    }, 0);

                borctotal = api
                    .column(4)
                    .data()
                    .reduce(function (a, b) {
                        return a + intVal(b);
                    }, 0);


                // Update footer
                $(api.column(5).footer()).html(
                    ondalikBinlik(alacaktotal,6)
                );
                $(api.column(4).footer()).html(
                    ondalikBinlik(borctotal, 6)
                );
                console.log(borctotal);
            }
        });
    });
</script>