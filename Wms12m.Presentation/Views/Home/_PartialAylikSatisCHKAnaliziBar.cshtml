@model List<ChartAylikSatisAnalizi>

<div class="col-md-12">
    <div class="portlet light portlet-fit bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-layers font-green"></i>
                <span class="caption-subject font-green bold uppercase">Aylık Satış Analizi Cari Hesap Bazında <span style="color:#8888a7;">BAR CHART</span></span>
            </div>
            <div class="chk-select" style="float:left; width:300px; margin-left:60px;height:29px;"></div>
            <div class="actions">
                <a class="btn btn-circle btn-icon-only btn-default" href="javascript:;">
                    <i class="icon-cloud-upload"></i>
                </a>
                <a class="btn btn-circle btn-icon-only btn-default" href="javascript:;">
                    <i class="icon-wrench"></i>
                </a>
                <a class="btn btn-circle btn-icon-only btn-default" href="javascript:;">
                    <i class="icon-trash"></i>
                </a>
            </div>
        </div>
        <div class="portlet-body">
            <div id="echarts_bar_chk" style="height:500px;"></div>
        </div>
    </div>
</div>

@*<link href="~/Content/assets/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Content/assets/global/plugins/jquery-ui/jquery-ui.min.js"></script>
    <link href="~/Content/dx.light.css" rel="stylesheet" />
    <link href="~/Content/dx.common.css" rel="stylesheet" />
    <script src="~/Content/global/plugins/morris/morris.min.js"></script>
    <script src="~/Content/global/plugins/morris/raphael-min.js"></script>
    <script src="~/Scripts/dx.web.debug.js"></script>
    <script src="~/Scripts/moment.min.js"></script>*@
<script>
    var x = '@ViewBag.CHK';

    $.ajax({
        url: window.location.origin + "/Home/CHKSelect",
        data: {},
        type: "post",
        success: function (data)
        {
            $(".chk-select").dxLookup({
                dataSource:   $.parseJSON(data),
                searchEnabled: true,
                pageLoadMode:"nextButton",
                searchExpr: ["HesapKodu", "Unvan"],
                valueExpr: 'HesapKodu',
                displayExpr: 'Unvan',
                value:x,
                onValueChanged: function (e) {
                    if(e.value!=null && e.value!=""){
                    var AylikSatisCHKAnaliziBarUrl = "/Home/PartialAylikSatisCHKAnaliziBar";
                    PartialView(AylikSatisCHKAnaliziBarUrl, 'aylik_satis_chk_bar', JSON.stringify({ chk: e.value }));
                    }
                },

                itemTemplate: function (itemData, itemIndex, itemElement) {
                    itemElement.css({"text-align":"left", "border-bottom":"1px solid #2fc1d8"});
                    if(itemIndex>0)
                    {
                        itemElement.css({ "margin-top":"-40px" });
                    }
                    var rightBlock = $("<div style=' margin: 2px; width:100%;'>");
                    rightBlock.append("<div><p style='font-size:11px; font-weight:bold; line-height: 0%;'><b>" + itemData.Unvan + "</b></p>");
                    rightBlock.append("<p style='line-height: 0%;font-size:11px;'>HesapKodu: <i>" + itemData.HesapKodu + "</i></p></div>");
                    itemElement.append(rightBlock);
                }
            });


        },
        error: function (jqxhr) { console.log(jqxhr); }
    });


    var model = @Html.Raw(Json.Encode(Model));
    var aylar = new Array();
    var Yil2015 = new Array();
    var Yil2016 = new Array();
    var Yil2017 = new Array();
    jQuery.each( model, function( i, val ) {
        aylar.push(val.Ay);
        Yil2015.push(val.Yil2015);
        Yil2016.push(val.Yil2016);
        Yil2017.push(val.Yil2017);
    });

    require.config({
        paths: {
            echarts: '/content/assets/global/plugins/echarts'
        }
    });

    // DEMOS
    require(
        [
            'echarts',
            'echarts/chart/bar',
            'echarts/chart/chord',
            'echarts/chart/eventRiver',
            'echarts/chart/force',
            'echarts/chart/funnel',
            'echarts/chart/gauge',
            'echarts/chart/heatmap',
            'echarts/chart/k',
            'echarts/chart/line',
            'echarts/chart/map',
            'echarts/chart/pie',
            'echarts/chart/radar',
            'echarts/chart/scatter',
            'echarts/chart/tree',
            'echarts/chart/treemap',
            'echarts/chart/venn',
            'echarts/chart/wordCloud'
        ],
        function(ec) {
            //--- BAR ---
            var myChart = ec.init(document.getElementById('echarts_bar_chk'));
            myChart.setOption({
                tooltip: {
                    trigger: 'axis'
                },
                legend: {
                    data: ['Yil2015', 'Yil2016', 'Yil2017']
                },
                toolbox: {
                    show: true,
                    feature: {
                        mark: {
                            show: true
                        },
                        dataView: {
                            show: true,
                            readOnly: false
                        },
                        magicType: {
                            show: true,
                            type: ['line', 'bar']
                        },
                        restore: {
                            show: true
                        },
                        saveAsImage: {
                            show: true
                        }
                    }
                },
                calculable: true,
                xAxis: [{
                    type: 'category',
                    data: aylar
                }],
                yAxis: [{
                    type: 'value',
                    splitArea: {
                        show: true
                    }
                }],
                series: [{
                    name: '2015',
                    type: 'bar',
                    data: Yil2015,
                    markPoint : {
                        data : [
                            {type : 'max', name: '2015'},
                            {type : 'min', name: '2015'}
                        ]
                    },
                    markLine : {
                        data : [
                            {type : 'average', name: '2015'}
                        ]
                    }
                }, {
                    name: '2016',
                    type: 'bar',
                    data: Yil2016,
                    markPoint : {
                        data : [
                            {type : 'max', name: '2016'},
                            {type : 'min', name: '2016'}
                        ]
                    },
                    markLine : {
                        data : [
                            {type : 'average', name: '2016'}
                        ]
                    }
                }, {
                    name: '2017',
                    type: 'bar',
                    data: Yil2017,
                    markPoint : {
                        data : [
                            {type : 'max', name: '2017'},
                            {type : 'min', name: '2017'}
                        ]
                    },
                    markLine : {
                        data : [
                            {type : 'average', name: '2017'}
                        ]
                    }
                }]
            });

        }
    );
    //new Morris.Bar({
    //    element: 'morris_chart_3',
    //    data: model,
    //    xkey: 'Ay',
    //    ykeys: ['Yil2015', 'Yil2016', 'Yil2017'],
    //    labels: ['2015', '2016', '2017'],
    //    //lineWidth: '3px',
    //    resize: true,
    //    barColors:["#0D8ECF","#CD0D74","#FCD202"]
    //});
</script>




