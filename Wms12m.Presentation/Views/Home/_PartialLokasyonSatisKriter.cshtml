@model List<GetCachedChartLocationKriter_Result>
<style>
    .morris-hover {position: absolute;z-index: 1000;}
    .morris-hover.morris-default-style {border-radius: 10px;padding: 6px;color: #666;background: rgba(255, 255, 255, 0.8);border: solid 2px rgba(230, 230, 230, 0.8);font-family: sans-serif;font-size: 12px;text-align: center;}
    .morris-hover.morris-default-style .morris-hover-row-label {font-weight: bold;margin: 0.25em 0;}
    .morris-hover.morris-default-style .morris-hover-point {white-space: nowrap;margin: 0.1em 0;}
    svg {width: 100%;}
</style>
<div class="row">
    <div class="col-md-12">
        <div class="portlet light portlet-fit bordered">
            <div class="portlet-title">
                <div class="caption">
                    <i class="icon-layers font-green-haze"></i>
                    <span class="caption-subject font-green-haze bold uppercase">Lokasyon Bazlı Satış Analizi Kriter <span style="color:#8888a7;">BAR CHART</span></span>
                </div>
                <div class="col-md-1 m-l-10 ls_tarih_kriter"></div>
                <div class="col-md-1 m-l-10 slct_aylik_lokasyon-kriter"></div>
                <div class="col-md-2">
                    @Html.DropDownList("SirketID", null, htmlAttributes: new { @class = "form-control SirketIDe", @onchange = "Reloade(this.value)" })
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse"> </a>
                    <a href="javascript:;" class="fullscreen"> </a>
                    <a href="javascript:;" class="reload" onclick="Reloade('@ViewBag.SirketKodu');"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="echarts_bar_lokasyon_kriter" style="height:500px;"></div>
            </div>
        </div>
    </div>
</div>
<script>
    var kriter_value= @Html.Raw(Json.Encode(ViewBag.Kriter));
    var doviz = [{ state: "TL"},{ state: "Döviz"},{ state: "Birim" }];
    var f_tarih = @ViewBag.Tarih;
    if ($('.SirketIDe option').size() == 1) $(".SirketIDe").hide();
    else $(".SirketIDe").val('@ViewBag.SirketKodu');
    function Reloade(v)
    {
        PartialView("/Home/PartialLokasyonSatisKriter", 'lokasyon_satis_kriter', JSON.stringify({ SirketKodu: v, tarih: f_tarih, kriter: kriter_value }));
    }
    $(document).ready(function (e) {
        var states = [
            { id: 0, state: "Tümü" },
            { id: 1, state: "Ocak" },
            { id: 2, state: "Şubat" },
            { id: 3, state: "Mart" },
            { id: 4, state: "Nisan" },
            { id: 5, state: "Mayıs" },
            { id: 6, state: "Haziran" },
            { id: 7, state: "Temmuz" },
            { id: 8, state: "Ağustos" },
            { id: 9, state: "Eylül" },
            { id: 10, state: "Ekim" },
            { id: 11, state: "Kasım" },
            { id: 12, state: "Aralik" }
        ];
        $(".ls_tarih_kriter").dxSelectBox({
            dataSource: states,
            valueExpr: 'id',
            displayExpr: 'state',
            value:f_tarih,
            onValueChanged: function (e) {
                PartialView("/Home/PartialLokasyonSatisKriter", 'lokasyon_satis_kriter', JSON.stringify({ SirketKodu: '@ViewBag.SirketKodu', tarih: e.value, kriter:kriter_value }));
            }
        });
        var model = @Html.Raw(Json.Encode(Model));
        var grupKod = new Array();
        var Yil2016 = new Array();
        var Yil2017 = new Array();
        jQuery.each( model, function( i, val ) {
            grupKod.push(val.GrupKod);
            Yil2016.push(val.Yil2016);
            Yil2017.push(val.Yil2017);
        });

        var color = ["#FF0F00","#FF6600","#FF9E01","#FCD202","#F8FF01","#B0DE09","#04D215","#0D8ECF","#0D52D1","#2A0CD0","#8A0CCF","#CD0D74","#754DEB","#DDDDDD","#999999","#333333","#000000"];
        for (var i = 0; i < model.length; i++) {
            $.extend(model[i],{
                color: color[i]
            });
        }

        $(".slct_aylik_lokasyon-kriter").dxSelectBox({
            dataSource: doviz,
            valueExpr: 'state',
            displayExpr: 'state',
            value: kriter_value,
            onValueChanged: function (e) {
                kriter_value=e.value;
                PartialView("/Home/PartialLokasyonSatisKriter", 'lokasyon_satis_kriter', JSON.stringify({ SirketKodu: '@ViewBag.SirketKodu', tarih: f_tarih, kriter:kriter_value }));
            }
        });

        require.config({
            paths: {
                echarts: '/content/assets/global/plugins/echarts'
            }
        });
        require(
            [
                'echarts',
                'echarts/chart/line',
                'echarts/chart/bar'
            ],
            function(ec) {
                //--- BAR ---
                var myChart = ec.init(document.getElementById('echarts_bar_lokasyon_kriter'));
                myChart.setOption({
                    tooltip: {
                        show: true
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            magicType: {
                                show: true,
                                title: 'Dönüştür',
                                type: ['line', 'bar']
                            },
                            saveAsImage: {
                                title: 'Resim olarak kaydet',
                                show: true
                            }
                        }
                    },
                    legend: {
                        data: ['2016', '2017']
                    },
                    calculable: true,
                    xAxis: [{
                        type: 'category',
                        data: grupKod,
                        axisLabel:{
                        rotate:-45
                        }
                    }],
                    yAxis: [{
                        type: 'value',
                        splitArea: {
                            show: true
                        }
                    }],
                    series: [{
                        name: '2016',
                        type: 'bar',
                        data: Yil2016,
                        markPoint : {
                            data : [
                                {type : 'max', name: '2016'},
                                {type : 'min', name: '2016'}
                            ]
                        },
                        markLine : {
                            data : [
                                {type : 'average', name: '2016'}
                            ]
                        }
                    }, {
                        name: '2017',
                        type: 'bar',
                        data: Yil2017,
                        markPoint : {
                            data : [
                                {type : 'max', name: '2017'},
                                {type : 'min', name: '2017'}
                            ]
                        },
                        markLine : {
                            data : [
                                {type : 'average', name: '2017'}
                            ]
                        }
                    }]
                });

            }
        );
    });
</script>