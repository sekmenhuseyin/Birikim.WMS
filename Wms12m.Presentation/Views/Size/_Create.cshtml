@model Olcu
<div class="modal-content">
    <div class="close-modal" data-dismiss="modal"><div class="lr"><div class="rl"></div></div></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-6">
                <div class="modal-body">@*Project Details Go Here*@
                    <h4>Yeni Boyut Girişi</h4>
                    @using (Ajax.BeginForm("Save", "Size", new AjaxOptions { UpdateTargetId = "liste" }, htmlAttributes: new { @class = "form", id = "frmNewSize", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.MalKodu, "Mal Kodu", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MalKodu, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.MalKodu, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Birim, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Birim, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Birim, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.En, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.En, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.En, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">mm</div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Boy, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Boy, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Boy, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">mm</div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Derinlik, "Derinlik", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Derinlik, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Derinlik, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">mm</div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Agirlik, "Ağırlık", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Agirlik, new { htmlAttributes = new { @class = "form-control input-circle", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Agirlik, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">kg</div>
                            </div>
                            <div class="form-group"><input type="submit" class="hide" value="Ekle" /></div>
                        </div>
                    }
                </div>
                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal"><i class="fa fa-times"></i> Kapat</button>
                <button type="button" class="btn btn-primary pull-right" data-dismiss="modal" id="submitter" onclick="$('#frmNewSize').submit()">Ekle</button>
            </div>
            <div class="col-lg-6">
                <div class="modal-body">
                    <h4>Toplu Boyut Girişi</h4>
                    @using (Html.BeginForm("Olcu", "Uploads", FormMethod.Post, new { enctype = "multipart/form-data", id = "fileupload" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <div class="col-md-4 m-t-20 col-md-offset-4"><a id="btnSablon" href="~/Content/SizeSablon.xlsx" class="btn btn-default">Şablon İndir</a></div>
                            <div class="col-md-2 m-t-20"><a id="linkUpload" class="btn btn-warning">Yükle</a></div>
                            <input id="btnUpload" type="file" name="file" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {
        $('#linkUpload').click(function () {
            $("#btnUpload").click();
        });
        $('#fileupload').fileupload({
            maxFileSize: 2000000,
            acceptFileTypes: /(\.|\/)(xlsx)$/i,
            dataType: 'json',
            add: function (e, data) { data.submit(); },
            done: function (e, data) { $('#modalEditPage').modal('toggle'); window.location.reload(); }
        });
    });
</script>