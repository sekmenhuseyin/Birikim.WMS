@model Olcu
@{
    ViewBag.Title = "Boyut Kartı işlemleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
}@section Styles{<link href="~/Content/assets/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/assets/global/plugins/jquery-file-upload/css/jquery.fileupload.css" rel="stylesheet" />
<link href="~/Content/assets/global/plugins/datatables/dataTables.min.css" rel="stylesheet" />
<link href="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.css" rel="stylesheet" type="text/css" />
}<div class="page-bar"><ul class="page-breadcrumb"><li><a href="/">Anasayfa</a><i class="fa fa-circle"></i></li><li><span>Boyut İşlemleri</span></li></ul></div>
<h1 class="page-title">Boyut İşlemleri</h1>
<div class="row">
    <div class="col-md-12">
        <div class="portlet box green">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Yeni Ekle
                </div>
                @{if (ViewBag.Yetki == true)
                {
                    <div class="col-md-1 pull-right m-t-5">
                        @using (Ajax.BeginForm("Olcu", "Uploads", null, new AjaxOptions { HttpMethod = "post" }, htmlAttributes: new { @class = "form", enctype = "multipart/form-data", id = "fileupload", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <a id="linkUpload" class="btn btn-warning">Yükle</a>
                            <input id="btnUpload" type="file" name="file" />
                        }
                    </div>
                    <div class="col-md-1 pull-right m-t-5"><a id="btnSablon" href="~/Content/SizeSablon.xlsx" class="btn btn-default">Şablon İndir</a></div>
                }}
            </div>
            <div class="portlet-body form" id="CreateEdit">
                @using (Ajax.BeginForm("Save", "Size", new AjaxOptions { OnSuccess = "getresult", HttpMethod = "post" }, htmlAttributes: new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.MalKodu, "Mal Kodu", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(a => a.MalKodu, new { @class = "form-control input-circle", @placeholder = "Mal Kodu", required = "required" })
                                @Html.ValidationMessageFor(model => model.MalKodu, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MalKodu, "Mal Adı", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                <input class="form-control input-circle" id="MalAdi" name="MalAdi" disabled="disabled" type="text">
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Birim, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                <select name="Birim" id="Birim" class="form-control input-circle" required></select>
                                @Html.ValidationMessageFor(model => model.Birim, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.En, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.En, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @onBlur = "ClearPoints()" } })
                                @Html.ValidationMessageFor(model => model.En, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1">mm</div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Boy, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Boy, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @onBlur = "ClearPoints()" } })
                                @Html.ValidationMessageFor(model => model.Boy, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1">mm</div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Derinlik, "Derinlik", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Derinlik, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @onBlur = "ClearPoints()" } })
                                @Html.ValidationMessageFor(model => model.Derinlik, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1">mm</div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Agirlik, "Ağırlık", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Agirlik, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @onBlur = "ClearPoints()" } })
                                @Html.ValidationMessageFor(model => model.Agirlik, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1">kg</div>
                        </div>
                    </div>
                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-4">
                                <button type="submit" class="btn btn-circle green">Ekle</button>
                                <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="portlet box green">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Liste
                </div>
            </div>
            <div class="portlet-body form">
                <div class="form-body">
                    <div id="liste"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{<script src="~/Content/assets/global/plugins/jquery-ui/jquery-ui.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/jquery-file-upload/js/jquery.iframe-transport.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/jquery-file-upload/js/vendor/jquery.ui.widget.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/jquery-file-upload/js/jquery.fileupload.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/dataTables.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/scripts/datatable.js" type="text/javascript"></script>
<script>
    $(document).ready(function () {
        $('#sample_1').DataTable({ "language": { "url": "http://cdn.datatables.net/plug-ins/1.10.13/i18n/Turkish.json" } });
        RefreshPage()
        $("#MalKodu").autocomplete({
            source: "/Buy/getMalzemebyCode/@ViewBag.SirketID",
            minLength: 2,
            select: function (event, ui) {
                getBirims(ui.item.id);
                $("#MalAdi").val(ui.item.value);
            }
        });
    });
    var DeleteFunctionUrl = '@Url.Action("Delete", "Size")';
    function RefreshPage()
    {
        $.ajax({
            url: "/Size/List",
            type: 'POST',
            dataType: "html",
            success: function (data) { if (data != "") $("#liste").html(data); },
            error: function (data) { Modaldialog("Lütfen Sayfayı Yenileyin", "Hata", "Tamam", "btn-default"); }
        });
    }
    function CreateEdit(Id) {
        if (Id == 0)
        {
            $("#MalKodu").val("");
            $("#MalKodu").prop("disabled", false);
            $("#MalAdi").val("");
            $("#Birim option").remove();
            $("#Boy").val("");
            $("#En").val("");
            $("#Derinlik").val("");
            $("#Agirlik").val("");
        }
        else
            PartialView("/Size/Edit", 'CreateEdit', JSON.stringify({ Id: Id }));
    }
    function ClearPoints() {
        $("#Boy").val($("#Boy").val().replace(".", ","));
        $("#En").val($("#En").val().replace(".", ","));
        $("#Derinlik").val($("#Derinlik").val().replace(".", ","));
        $("#Agirlik").val($("#Agirlik").val().replace(".", ","));
    }
    function getresult(data) {
        if (data.Status == false)
            Modaldialog(data.Message, "Hata", "Tamam", "btn-danger");
        else
        {
            $("#MalKodu").val("");
            $("#MalAdi").val("");
            $("#Birim option").remove();
            $("#Boy").val("");
            $("#En").val("");
            $("#Derinlik").val("");
            $("#Agirlik").val("");
            RefreshPage()
        }
    };
    function getBirims(id) {
        $("#Birim option").remove();
        $.ajax({
            url: "/Buy/getBirim",
            type: 'POST',
            data: JSON.stringify({ kod: id, s: @ViewBag.SirketID }),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data != "") {
                    if (data[0].Birim1.replace(" ", "") != "") { $('#Birim').append($('<option>', { value: data[0].Birim1, text: data[0].Birim1 })); }
                    if (data[0].Birim2.replace(" ", "") != "") { $('#Birim').append($('<option>', { value: data[0].Birim2, text: data[0].Birim2 })); }
                    if (data[0].Birim3.replace(" ", "") != "") { $('#Birim').append($('<option>', { value: data[0].Birim3, text: data[0].Birim3 })); }
                    if (data[0].Birim4.replace(" ", "") != "") { $('#Birim').append($('<option>', { value: data[0].Birim4, text: data[0].Birim4 })); }
                }
                $("#MalKodu").val(id);
            }
        });
    }
    $(function () {
        $('#linkUpload').click(function () {
            $("#btnUpload").click();
        });
        $('#fileupload').fileupload({
            maxFileSize: 2000000,
            acceptFileTypes: /(\.|\/)(xlsx)$/i,
            dataType: 'json',
            add: function (e, data) { data.submit(); },
            done: function (e, data) {
                if (data.result.Status == false)
                    Modaldialog(data.result.Message, "Hata", "Tamam", "btn-danger");
                else//listeyi yenile
                RefreshPage()
            }
        });
    });
</script>}