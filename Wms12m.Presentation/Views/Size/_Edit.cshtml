@model Olcu
@using (Ajax.BeginForm("Save", "Size", new AjaxOptions { OnSuccess = "getresult", HttpMethod = "post" }, htmlAttributes: new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ID)
    <div class="form-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MalKodu, "Mal Kodu", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MalKodu, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MalKodu, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MalKodu, "Mal Adı", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <input class="form-control input-circle" id="MalAdi" name="MalAdi" disabled="disabled" type="text">
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Birim, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <select name="Birim" id="Birim" class="form-control input-circle" required></select>
                @Html.ValidationMessageFor(model => model.Birim, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.En, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.En, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @onBlur = "ClearPoints()" } })
                @Html.ValidationMessageFor(model => model.En, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">mm</div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Boy, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Boy, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @onBlur = "ClearPoints()" } })
                @Html.ValidationMessageFor(model => model.Boy, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">mm</div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Derinlik, "Derinlik", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Derinlik, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @onBlur = "ClearPoints()" } })
                @Html.ValidationMessageFor(model => model.Derinlik, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">mm</div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Agirlik, "Ağırlık", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Agirlik, new { htmlAttributes = new { @class = "form-control input-circle", required = "required", @onBlur = "ClearPoints()" } })
                @Html.ValidationMessageFor(model => model.Agirlik, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">kg</div>
        </div>
    </div>
    <div class="form-actions">
        <div class="row">
            <div class="col-md-offset-3 col-md-4">
                <button type="submit" class="btn btn-circle green">@{if(Model.ID == 0){<text>Ekle</text>}else{<text>Kaydet</text>}}</button>
                <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        getBirims($("#MalKodu").val());
        $.ajax({
            url: "/Buy/getMalzemebyCode/@ViewBag.SirketID?term=" + $("#MalKodu").val(),
            type: 'POST',
            dataType: "html",
            success: function (data) {
                if (data != "")
                {
                    var tmp = data.split(",");
                    $("#MalAdi").val(tmp[1].replace("value", "").replace(":", ""));
                    $("#MalAdi").val(replaceAll($("#MalAdi").val(), '"', ""));
                }
            }
        });
        $("#MalKodu").autocomplete({
            source: "/Buy/getMalzemebyCode/@ViewBag.SirketID",
            minLength: 2,
            select: function (event, ui) {
                getBirims(ui.item.id);
                $("#MalAdi").val(ui.item.value);
            }
        });
    });
</script>