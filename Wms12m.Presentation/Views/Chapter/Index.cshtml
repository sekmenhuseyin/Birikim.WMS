@model Store04
@{
    ViewBag.Title = "Bölüm Kartı işlemleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/Content/assets/global/plugins/bootstrap-touchspin/bootstrap.touchspin.css")" rel="stylesheet" type="text/css" />
<h3 class="page-title">Bölüm İşlemleri</h3>
<div class="row">
    <div class="col-md-12">
        <div id="CreateEdit">
            <div class="portlet box green">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-gift"></i>Bölüm Ekle
                    </div>
                </div>
                <div class="portlet-body form">
                    @using (Ajax.BeginForm("ChapteriOperation", "Chapter", new { }, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "ChapterFrom", OnSuccess = "FuncSearchBtn" }, new { @class = "form-horizontal" }))
                    {
                        @Html.HiddenFor(a => a.ID)
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="form-body">
                            <div class="form-group">
                                <label class="col-md-3 control-label">Depo</label>
                                <div class="col-md-4">
                                    @Html.DropDownList("DepoID", null, htmlAttributes: new { @class = "form-control input-circle DepoID", required = "required", @onchange = "getCorridor(this.value,'KoridorID');" })
                                    <span class="field-validation-valid" data-valmsg-for="StoreId" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Koridor</label>
                                <div class="col-md-4">
                                    @Html.DropDownList("KoridorID", null, htmlAttributes: new { @class = "form-control input-circle KoridorID", required = "required", @onchange = "getShelf(this.value,'RafID');" })
                                    <span class="field-validation-valid" data-valmsg-for="KoridorID" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Raf</label>
                                <div class="col-md-4">
                                    @Html.DropDownList("RafID", null, htmlAttributes: new { @class = "form-control input-circle RafID", required = "required" })
                                    <span class="field-validation-valid" data-valmsg-for="RafID" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Bölüm</label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(a => a.Bolum, new { @class = "form-control input-circle", @placeholder = "Bölüm" })
                                    <span class="field-validation-valid" data-valmsg-for="Bolum" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">En</label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(a => a.En, new { @class = "form-control input-circle", @placeholder = "En" })
                                    <span class="field-validation-valid" data-valmsg-for="En" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Kat Ağırlık Kapasite</label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(a => a.KatAgirlik, new { @class = "form-control input-circle", @placeholder = "KatAgirlik" })
                                    <span class="field-validation-valid" data-valmsg-for="KatAgirlik" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Sıra</label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(a => a.SiraNo, new { @id = "touchspin_11", @class = "form-control" })
                                    <span class="field-validation-valid" data-valmsg-for="Sort" data-valmsg-replace="true" style="color:red;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Durum</label>
                                <div class="col-md-4">
                                    @Html.CheckBoxFor(a => a.Aktif, new { @checked = Model.Aktif ? "checked" : string.Empty, @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })

                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-offset-3 col-md-9">
                                    <button type="submit" class="btn btn-circle green ekle-duzenle">@(Model.ID > 0 ? "Düzenle" : "Ekle")</button>
                                    <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div>
            <div class="portlet box green">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-gift"></i>Bölüm Listesi
                    </div>
                </div>
                <div class="portlet-body form">
                    <div class="form-horizontal">
                        <div class="form-body">
                            <div class="row">
                                <label class="col-sm-1">
                                    <label style="color:#32c5d2;">Durum</label>
                                </label>
                                <label class="col-sm-1 radio-inline">
                                    <input type="radio" name="Locked" value="Locked" /> Aktif
                                </label>
                                <label class="col-sm-1 radio-inline">
                                    <input type="radio" name="Locked" value="noLocked" /> Pasif
                                </label>
                                <label class="col-sm-1 radio-inline">
                                    <input type="radio" name="Locked" value="All" checked /> Tümü
                                </label>
                                <div class="col-sm-3 col-sm-offset-4" style="color:#32c5d2;">
                                    <div class="row">
                                        <div class="col-sm-4">Depo</div>
                                        <div class="col-sm-8">
                                            @Html.DropDownList("DepoID", null, htmlAttributes: new { @class = "form-control StoreListi input-circle DepoID", @onchange = "getCorridor(this.value,'CorridorList');" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-4">Koridor</div>
                                        <div class="col-sm-8">
                                            <select id="CorridorList" class="form-control input-circle KoridorID" onchange = "getShelf(this.value, 'ShelfListi');"></select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-4">Raf</div>
                                        <div class="col-sm-8">
                                            <select id="ShelfListi" class="form-control input-circle RafID"></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="ChapterGrid" style="padding:10px;margin-top:30px;"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="@Url.Content("~/Content/assets/global/plugins/fuelux/js/spinner.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/assets/global/plugins/bootstrap-touchspin/bootstrap.touchspin.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/assets/global/scripts/app.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/assets/pages/scripts/components-bootstrap-touchspin.min.js")" type="text/javascript"></script>
<script src="~/Content/Scripts/_Operation.js"></script>
<script type="text/javascript">
    var ChapterGridUrl = '@Url.Action("ChapterGridPartial", "Chapter")';
    var ChapterDetailUrl = '@Url.Action("ChapterDetailPartial", "Chapter")';
    var DeleteFunctionUrl = '@Url.Action("Delete", "Chapter")';
    $(document).ready(function () {
        $(".make-switch").bootstrapSwitch();
        @if (@Model.Aktif == false) { <text> $('input[type=checkbox]').prop("checked", true).trigger("change"); </text>}
        $(".DepoID").prepend("<option value='0'>Seçiniz !!!</option>"); $(".DepoID")[0].selectedIndex = 0; $(".DepoID")[1].selectedIndex = 0;
        $(".KoridorID").prepend("<option value='0'>Seçiniz !!!</option>"); $(".KoridorID")[0].selectedIndex = 0; $(".KoridorID")[1].selectedIndex = 0;
        $(".RafID").prepend("<option value='0'>Seçiniz !!!</option>"); $(".RafID")[0].selectedIndex = 0; $(".RafID")[1].selectedIndex = 0;
        $('[name="Locked"]').click(function () { FuncSearchBtn(); });
        $('#ShelfListi').on('change', function () { FuncSearchBtn(); })
    });
    function getCorridor(id, what) {
        $("#" + what + " option").remove();
        if (what == "RafID") { $("#RafID option").remove(); $("#RafID").prepend("<option value='0'>Seçiniz !!!</option>"); $("#RafID")[0].selectedIndex = 0; }
        $.ajax({
            url: "/Corridor/CorridorList/" + id,
            type: 'POST',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data != "") {
                    $.each(data, function (i, item) {
                        $('#' + what).append($('<option>', { value: item.Value, text: item.Text }));
                    });
                    $("#" + what).prepend("<option value='0'>Seçiniz !!!</option>"); $("#" + what)[0].selectedIndex = 0;
                }
            }
        });
    }
    function getShelf(id, what) {
        $("#" + what + " option").remove();
        $.ajax({
            url: "/Shelf/ShelfList/" + id,
            type: 'POST',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data != "") {
                    $.each(data, function (i, item) {
                        $('#' + what).append($('<option>', { value: item.Value, text: item.Text }));
                    });
                    $("#" + what).prepend("<option value='0'>Seçiniz !!!</option>"); $("#" + what)[0].selectedIndex = 0;
                }
            }
        });
    }
    function FuncSearchBtn() {
        var Type = $("input[type='radio'][name='Locked']:checked").val();
        var StoreId = $(".StoreListi option:selected").val();
        var CorridorId = $("#CorridorList option:selected").val();
        var ShelfId = $("#ShelfListi option:selected").val();
        PartialView(ChapterGridUrl, 'ChapterGrid', JSON.stringify({ Id: (Type + "#" + StoreId + "#" + CorridorId + "#" + ShelfId) }));
    }
    function ChapterReturn(Data) {
        FuncSearchBtn();
        CreateEdit('0');

    }
    function CreateEdit(Id) {
        PartialView(ChapterDetailUrl, 'CreateEdit', JSON.stringify({ Id: Id == null ? '' : Id }));
    }
    function InsertRefresh() {
        PartialView(ChapterDetailUrl, "CreateEdit", '0');
    }
</script>
