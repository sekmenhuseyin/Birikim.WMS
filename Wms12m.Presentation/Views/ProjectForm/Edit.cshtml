@model ProjeForm



@section Styles{<link href="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/datatables/dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.css" rel="stylesheet" type="text/css" />

}
<style>
    .control-label {
        text-align: right;
        color: black;
    }
</style>

<div class="portlet box green">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-gift"></i>Müşteri Düzenle
        </div>
    </div>
    <div class="portlet-body form">
        @using (Ajax.BeginForm("Save", "ProjectForm", new { }, new AjaxOptions { InsertionMode = InsertionMode.Replace, OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEdit('0');" }, new { @class = "form-horizontal" }))
        {
            @Html.HiddenFor(model => model.ID)
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="form-body">
                <div class="form-group row">
                    @Html.LabelFor(model => model.MusteriID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.DropDownList("MusteriID", null, htmlAttributes: new { @class = "form-control input-circle" })
                        @Html.ValidationMessageFor(model => model.MusteriID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Proje, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Proje, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.Proje, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group row">
                    @Html.LabelFor(model => model.Form, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Form, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.Form, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group row">
                    @Html.LabelFor(model => model.Sorumlu, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Sorumlu, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.Sorumlu, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.KarsiSorumlu, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.KarsiSorumlu, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.KarsiSorumlu, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group row">
                    @Html.LabelFor(model => model.Aciklama, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.MesaiKontrol, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.CheckBoxFor(model => model.MesaiKontrol, new { id = "MesaiKontrol", @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })
                        @*@Html.CheckBoxFor(model => model.MesaiKontrol, new { id = "MesaiKontrol", @class = "make-switch" })*@
                        @Html.ValidationMessageFor(model => model.MesaiKontrol, "", new { @class = "text-danger" })

                    </div>
                </div>


                <div class="form-group row">
                    @Html.LabelFor(model => model.MesaiKota, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.MesaiKota, new { htmlAttributes = new { id = "MesaiKota", @class = "form-control input-circle", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.MesaiKota, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Durum, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @*@Html.CheckBoxFor(model => model.MesaiKontrol, new { id = "MesaiKontrol", @class = "make-switch" })*@
                        @Html.EditorFor(model => model.Durum, new { htmlAttributes = new { @class = "form-control input-circle" } })
                        @Html.ValidationMessageFor(model => model.Durum, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-actions">
                    <div class="row">
                        <div class="col-md-offset-2 col-md-10">
                            <center>
                                <input type="submit" value="Kaydet" class="btn btn-circle green" />
                                <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
                            </center>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script src="~/Content/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/dataTables.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/assets/global/scripts/datatable.js" type="text/javascript"></script>
<script type="text/javascript">

    $("#MesaiKontrol").bootstrapSwitch();
    $(document).ready(function () {
        $('#MesaiKontrol').on('switchChange.bootstrapSwitch', function (e, data) {
            var state = $(this).bootstrapSwitch('state');//returns true or false

            if (state) {
                $('#MesaiKota').prop("readonly", false)
            }
            else {
                $('#MesaiKota').prop("readonly", true)
            }
        });
    });
</script>



@*@model ProjeForm

@{
    ViewBag.Title = "Proje Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ProjeForm</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.MusteriID, "MusteriID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("MusteriID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MusteriID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Proje, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Proje, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Proje, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Form, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Form, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sorumlu, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sorumlu, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sorumlu, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.KarsiSorumlu, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.KarsiSorumlu, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KarsiSorumlu, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Aciklama, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MesaiKontrol, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.MesaiKontrol)
                        @Html.ValidationMessageFor(model => model.MesaiKontrol, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MesaiKota, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MesaiKota, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MesaiKota, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PID, "PID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Durum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Durum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Durum, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display: none;">
                @Html.LabelFor(model => model.Kaydeden, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Kaydeden, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Kaydeden, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display: none;">
                @Html.LabelFor(model => model.KayitTarih, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.KayitTarih, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KayitTarih, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Kaydet" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Listeye Dön", "Index")
    </div>
</body>
</html>*@
