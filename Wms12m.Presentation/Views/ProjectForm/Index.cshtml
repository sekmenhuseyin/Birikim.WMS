@model ProjeForm

@{
    ViewBag.Title = "ProjeForm işlemleri";
    Layout = "~/Views/Shared/_Layout.cshtml";

}@section Styles{<link href="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/datatables/dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.css" rel="stylesheet" type="text/css" />

}
<style>
    .control-label {
        text-align: right;
        color: black;
    }
</style>
<div class="page-bar"><ul class="page-breadcrumb"><li><a href="/">Anasayfa</a><i class="fa fa-circle"></i></li><li><span>Proje Form İşlemleri</span></li></ul></div>
<h1 class="page-title">Proje Form İşlemleri</h1>
<div class="row">

    <div class="col-md-12">
        <div class="row" id="CreateEdit">
            <div class="col-md-12">
                <div class="portlet box green">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-gift"></i>Proje Form Ekle

                        </div>
                    </div>
                    <div class="portlet-body form">
                        @using (Ajax.BeginForm("Save", "ProjectForm", new { }, new AjaxOptions { InsertionMode = InsertionMode.Replace, OnFailure = "Modaldialog('Lütfen Tekrar Deneyin', 'Hata', 'Tamam', 'btn-danger');", OnSuccess = "CreateEdit('0');" }, new { @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(model => model.ID)
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-body">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MusteriID, "MusteriID", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("MusteriID", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.MusteriID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Proje, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Proje, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Proje, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Sorumlu, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("Sorumlu", null, htmlAttributes: new { @class = "form-control input-circle" })
                                        @Html.ValidationMessageFor(model => model.Sorumlu, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group row">
                                    @Html.LabelFor(model => model.KarsiSorumlu, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.KarsiSorumlu, new { htmlAttributes = new {  @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.KarsiSorumlu, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Aciklama, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control input-circle" } })
                                        @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MesaiKontrol, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.CheckBoxFor(model => model.MesaiKontrol, new { id = "MesaiKontrol", @class = "make-switch", @data_size = "normal", @data_on_color = "success", @data_off_text = "Pasif", @data_on_text = "Aktif", @data_off_color = "danger" })
                                        @Html.ValidationMessageFor(model => model.MesaiKontrol, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MesaiKota, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.MesaiKota, new { htmlAttributes = new { id = "MesaiKota", @class = "form-control input-circle", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.MesaiKota, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-3 col-md-9">
                                            <input type="submit" value="Ekle" class="btn btn-circle green" />
                                            <button type="button" class="btn btn-circle grey-salsa btn-outline" onclick="CreateEdit('0')">Temizle</button>
   
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>
        </div>
        <div id="liste">
        </div>
    </div>


</div>
@section Scripts{
    <script src="~/Content/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
    <script src="~/Content/assets/global/plugins/bootstrap-touchspin/jquery.bootstrap-touchspin.js" type="text/javascript"></script>
    <script src="~/Content/assets/global/plugins/datatables/dataTables.min.js" type="text/javascript"></script>
    <script src="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.min.js" type="text/javascript"></script>
    <script src="~/Content/assets/global/scripts/datatable.js" type="text/javascript"></script>
    <script type="text/javascript">
        $("#MesaiKontrol").bootstrapSwitch();
        $(document).ready(function () {
            $('#MesaiKontrol').on('switchChange.bootstrapSwitch', function (e, data) {
                var state = $(this).bootstrapSwitch('state');//returns true or false

            if (state) {
                $('#MesaiKota').prop("readonly", false)
            }
            else {
                $('#MesaiKota').prop("readonly", true)
            }
        });
    });
    var EditURL = '@Url.Action("Edit", "ProjectForm")';
    var DeleteFunctionUrl = '@Url.Action("Delete", "ProjectForm")';
    PartialView("/ProjectForm/List", 'liste');

    function CreateEdit(Id) {
        if (Id == 0) {
            $("#ID").val("0");
            $("#Proje").val("");
            $("#Sorumlu").val("");
            $("#KarsiForumlu").val("");
            $("#Aciklama").val("");
            $("#MesaiKota").val("");
            PartialView("/ProjectForm/List", 'liste');
        }
        else
        { PartialView(EditURL, 'CreateEdit', JSON.stringify({ Id: Id })); }



    }
    </script>
}



@*@model IEnumerable<ProjeForm>

@{
    ViewBag.Title = "Proje Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Proje)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Form)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sorumlu)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.KarsiSorumlu)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Aciklama)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MesaiKontrol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MesaiKota)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Durum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Kaydeden)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.KayitTarih)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Degistiren)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DegisTarih)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Musteri.Firma)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjeForm2.Proje)
            </th>
            <th></th>
        </tr>
    
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Proje)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Form)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sorumlu)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.KarsiSorumlu)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Aciklama)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MesaiKontrol)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MesaiKota)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Durum)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Kaydeden)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.KayitTarih)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Degistiren)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DegisTarih)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Musteri.Firma)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjeForm2.Proje)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
                @Html.ActionLink("Details", "Details", new { id=item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.ID })
            </td>
        </tr>
    }
    
    </table>
</body>
</html>*@
